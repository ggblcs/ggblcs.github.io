import{_ as e,p as a,q as n,a1 as s}from"./framework-96b046e1.js";const r={},d=s(`<h1 id="_02-数" tabindex="-1"><a class="header-anchor" href="#_02-数" aria-hidden="true">#</a> 02 数</h1><h2 id="_1-整数" tabindex="-1"><a class="header-anchor" href="#_1-整数" aria-hidden="true">#</a> 1 整数</h2><h2 id="_2-浮点数" tabindex="-1"><a class="header-anchor" href="#_2-浮点数" aria-hidden="true">#</a> 2 浮点数</h2><h2 id="_3-整数和浮点数" tabindex="-1"><a class="header-anchor" href="#_3-整数和浮点数" aria-hidden="true">#</a> 3 整数和浮点数</h2><p>将任意两个数相<strong>除</strong>时，结果总是浮点数，即便这两个数都是整数且能够相除。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token number">4</span><span class="token operator">/</span><span class="token number">2</span> <span class="token comment"># 2.0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在<strong>其他运算</strong>中，一个操作数是整数，另一个是浮点数，即便结果是整数，结果也总是浮点数。</p><h2 id="_4-数中的下划线" tabindex="-1"><a class="header-anchor" href="#_4-数中的下划线" aria-hidden="true">#</a> 4 数中的下划线</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>num = 66_7777
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>书写很大的数时，可使用下划线将其分组，方便阅读。</p><p>python存储时，会忽略下划线，所以打印时不会打印下划线。</p>`,11),t=[d];function i(c,h){return a(),n("div",null,t)}const l=e(r,[["render",i],["__file","02数.html.vue"]]);export{l as default};
