import{_ as n,p as s,q as a,a1 as t}from"./framework-96b046e1.js";const p={},e=t(`<h1 id="_27-缓动动画封装" tabindex="-1"><a class="header-anchor" href="#_27-缓动动画封装" aria-hidden="true">#</a> 27 缓动动画封装</h1><h2 id="_01-缓动动画" tabindex="-1"><a class="header-anchor" href="#_01-缓动动画" aria-hidden="true">#</a> 01 缓动动画</h2><p>公式</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code> 公式: 步长 = (结束位置 - 开始位置) * 缓动系数(0 ~1)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_02-方法封装" tabindex="-1"><a class="header-anchor" href="#_02-方法封装" aria-hidden="true">#</a> 02 方法封装</h2><p>下面是封装的关于缓动动画效果的函数封装，代码不重要，两句话重要。</p><ol><li>通过winds将方法内的方法名提升，将函数绑定到window对象上， 这样全局就可以使用了。</li><li>前提条件是执行一下函数体，于是立即执行函数（两个括号搞定）起作用了。</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> timerId <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">function</span> <span class="token function">linearAnimation</span><span class="token punctuation">(</span><span class="token parameter">ele<span class="token punctuation">,</span> target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">clearInterval</span><span class="token punctuation">(</span>timerId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        timerId <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 1.拿到元素当前的位置</span>
            <span class="token keyword">let</span> begin <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>ele<span class="token punctuation">.</span>style<span class="token punctuation">.</span>marginLeft<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token comment">// 2.定义变量记录步长</span>
            <span class="token comment">//         0  -  500 = -500    13</span>
            <span class="token comment">//         500 -  200 = 300    -13</span>
            <span class="token keyword">let</span> step <span class="token operator">=</span> <span class="token punctuation">(</span>begin <span class="token operator">-</span> target<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token operator">-</span><span class="token number">13</span> <span class="token operator">:</span> <span class="token number">13</span><span class="token punctuation">;</span>
            <span class="token comment">// 3.计算新的位置</span>
            begin <span class="token operator">+=</span> step<span class="token punctuation">;</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>target <span class="token operator">-</span> begin<span class="token punctuation">)</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>step<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>target <span class="token operator">-</span> begin<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>step<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token function">clearInterval</span><span class="token punctuation">(</span>timerId<span class="token punctuation">)</span><span class="token punctuation">;</span>
                begin <span class="token operator">=</span> target<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token comment">// 4.重新设置元素的位置</span>
            ele<span class="token punctuation">.</span>style<span class="token punctuation">.</span>marginLeft <span class="token operator">=</span> begin <span class="token operator">+</span> <span class="token string">&quot;px&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">function</span> <span class="token function">easeAnimation</span><span class="token punctuation">(</span><span class="token parameter">ele<span class="token punctuation">,</span> target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">clearInterval</span><span class="token punctuation">(</span>timerId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        timerId <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 1.拿到元素当前的位置</span>
            <span class="token keyword">let</span> begin <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>ele<span class="token punctuation">.</span>style<span class="token punctuation">.</span>marginLeft<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token comment">// 2.定义变量记录步长</span>
            <span class="token comment">// 公式: (结束位置 - 开始位置) * 缓动系数(0 ~1)</span>
            <span class="token keyword">let</span> step <span class="token operator">=</span> <span class="token punctuation">(</span>target <span class="token operator">-</span> begin<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.3</span><span class="token punctuation">;</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>step<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 3.计算新的位置</span>
            begin <span class="token operator">+=</span> step<span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>step<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token function">clearInterval</span><span class="token punctuation">(</span>timerId<span class="token punctuation">)</span><span class="token punctuation">;</span>
                begin <span class="token operator">=</span> target<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// 4.重新设置元素的位置</span>
            ele<span class="token punctuation">.</span>style<span class="token punctuation">.</span>marginLeft <span class="token operator">=</span> begin <span class="token operator">+</span> <span class="token string">&quot;px&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 将函数绑定到window对象上, 这样全局就可以使用了</span>
    window<span class="token punctuation">.</span>linearAnimation <span class="token operator">=</span> linearAnimation<span class="token punctuation">;</span>
    window<span class="token punctuation">.</span>easeAnimation <span class="token operator">=</span> easeAnimation<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),o=[e];function c(i,l){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","27缓动动画封装.html.vue"]]);export{k as default};
