import{_ as n,p as s,q as a,a1 as e}from"./framework-96b046e1.js";const t={},o=e(`<h1 id="_03-dom获取节点" tabindex="-1"><a class="header-anchor" href="#_03-dom获取节点" aria-hidden="true">#</a> 03 DOM获取节点</h1><p>基于html</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_1-获取指定元素所有的子元素" tabindex="-1"><a class="header-anchor" href="#_1-获取指定元素所有的子元素" aria-hidden="true">#</a> 1.获取指定元素所有的子元素</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> oDiv <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// children属性获取到的是指定元素中所有的子元素</span>
<span class="token comment">// console.log(oDiv.children);</span>
<span class="token comment">// childNodes属性获取到的是指定元素中所有的节点</span>
<span class="token comment">// console.log(oDiv.childNodes);</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> node <span class="token keyword">of</span> oDiv<span class="token punctuation">.</span>childNodes<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token comment">// console.log(node.nodeType);</span>
<span class="token comment">// if(node.nodeType === 1){</span>
<span class="token comment">//搜索nodetype mdn官网专业写法</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>nodeType <span class="token operator">===</span> Node<span class="token punctuation">.</span><span class="token constant">ELEMENT_NODE</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-什么是节点" tabindex="-1"><a class="header-anchor" href="#_2-什么是节点" aria-hidden="true">#</a> 2.什么是节点?</h2><p>DOM对象(document), 这个对象以树的形式保存了界面上所有的内容 HTML页面每一部分都是由节点(标签(元素),文本,属性)，回车也算文本。</p><h2 id="_3-获取指定节点中的第一个子节点" tabindex="-1"><a class="header-anchor" href="#_3-获取指定节点中的第一个子节点" aria-hidden="true">#</a> 3.获取指定节点中的第一个子节点</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// let oDiv = document.querySelector(&quot;div&quot;);</span>
<span class="token comment">// console.log(oDiv.firstChild);</span>
<span class="token comment">//   获取指定元素中的第一个子元素</span>
<span class="token comment">// console.log(oDiv.firstElementChild);</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-获取指定节点中最后一个子节点" tabindex="-1"><a class="header-anchor" href="#_4-获取指定节点中最后一个子节点" aria-hidden="true">#</a> 4.获取指定节点中最后一个子节点</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// console.log(oDiv.lastChild);</span>

<span class="token comment">// 4.获取指定元素中最后一个子元素</span>

<span class="token comment">// console.log(oDiv.lastElementChild);</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-通过子元素获取父元素-父节点" tabindex="-1"><a class="header-anchor" href="#_5-通过子元素获取父元素-父节点" aria-hidden="true">#</a> 5.通过子元素获取父元素/父节点</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> item <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;.item&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// console.log(item.parentElement);</span>
<span class="token comment">// console.log(item.parentNode);</span>
<span class="token comment">// let parentEle = item.parentElement || item.parentNode;//以前的兼容写法，现在没必要了</span>
<span class="token comment">// console.log(parentEle);</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-获取相邻上一个节点" tabindex="-1"><a class="header-anchor" href="#_6-获取相邻上一个节点" aria-hidden="true">#</a> 6.获取相邻上一个节点</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// console.log(item.previousSibling);</span>
<span class="token comment">//   获取相邻上一个元素</span>
<span class="token comment">// console.log(item.previousElementSibling);</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-获取相邻下一个节点" tabindex="-1"><a class="header-anchor" href="#_7-获取相邻下一个节点" aria-hidden="true">#</a> 7.获取相邻下一个节点</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>nextSibling<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//   获取相邻下一个元素</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>nextElementSibling<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17),c=[o];function p(l,i){return s(),a("div",null,c)}const u=n(t,[["render",p],["__file","03DOM获取节点.html.vue"]]);export{u as default};
