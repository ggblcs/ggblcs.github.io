import{_ as e,p as o,q as c,a1 as a}from"./framework-96b046e1.js";const t={},d=a('<h1 id="_21-响应式使用" tabindex="-1"><a class="header-anchor" href="#_21-响应式使用" aria-hidden="true">#</a> 21 响应式使用</h1><p>响应式注意点</p><ol><li><p>只有提前在data中声明的内容才有响应式。如果obj={}，那么它的突然新增的属性(name) <code>obj.name=&quot;&quot;</code>不具有响应式。</p><p>除非<code>obj={name:&quot;&quot;}</code>提前声明才具有响应式，<code>{{obj.name}}{{obj}}</code>才会有变。</p></li><li><p>但是<code>obj={}</code>,obj本身具有响应式。在改变<code>obj={name: &#39;zs&#39;}</code>则相当于利用了obj本身的响应式，所以之后<code>{{obj}}{{obj.name}}</code>会有响应式，且name也具有了响应式。</p></li></ol>',3),_=[d];function n(r,s){return o(),c("div",null,_)}const l=e(t,[["render",n],["__file","21响应式使用.html.vue"]]);export{l as default};
