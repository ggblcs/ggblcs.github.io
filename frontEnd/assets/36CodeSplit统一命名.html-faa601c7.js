import{_ as s,p as n,q as a,a1 as e}from"./framework-96b046e1.js";const t={},p=e(`<h1 id="_36-codesplit统一命名" tabindex="-1"><a class="header-anchor" href="#_36-codesplit统一命名" aria-hidden="true">#</a> 36 CodeSplit统一命名</h1><p>第一次走不熟悉的道路总是艰难的，但总要有第一次，这一集相当于自己封装优化。</p><p><code>webpack.config.js</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&quot;xxx&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">filename</span><span class="token operator">:</span>  <span class="token string">&quot;static/js/[name].js&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 兼容了多入口</span>
    <span class="token literal-property property">chunkFilename</span><span class="token operator">:</span> <span class="token string">&quot; static/js/[name].chunk.js&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 区分了主文件与chunk</span>
    <span class="token literal-property property">assetMouduleFilename</span><span class="token operator">:</span> <span class="token string">&quot;static/media/[hash:10][ext][query]&quot;</span><span class="token punctuation">,</span>
    <span class="token comment">// 图片字体等通过type:assets 处理的资源命名</span>
    <span class="token literal-property property">clean</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>插件中</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">filname</span><span class="token operator">:</span> <span class="token string">&quot;static/css/[name].css&quot;</span> <span class="token comment">// 输出的css命名</span>
    <span class="token literal-property property">chunkFilename</span><span class="token operator">:</span> <span class="token string">&quot;static/css/[name].chunk.css&quot;</span> <span class="token comment">// 动态导入的css打包后的命名</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),o=[p];function c(l,i){return n(),a("div",null,o)}const u=s(t,[["render",c],["__file","36CodeSplit统一命名.html.vue"]]);export{u as default};
