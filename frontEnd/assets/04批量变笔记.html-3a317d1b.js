import{_ as n,p as s,q as a,a1 as t}from"./framework-96b046e1.js";const p={},e=t(`<h1 id="_04-批量变笔记" tabindex="-1"><a class="header-anchor" href="#_04-批量变笔记" aria-hidden="true">#</a> 04 批量变笔记</h1><p>别人整理的笔记以js为后缀，以html为后缀，我不想一篇一篇复制了。怎么办？直接自动变md后缀，并写入标题，生成代码块。</p><p>与01 笔记序号批量整理同宗同源需要 note 和 newnote 目录</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>01a.js
03b.html
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>变为</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>01a.md
02b.md
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> log <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;console&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;fs&quot;</span><span class="token punctuation">)</span>

<span class="token comment">// 配置项</span>
<span class="token comment">// sidebar示例，方便直接拼接</span>
<span class="token comment">// let siderEg = &#39;/typora/02frontEnd/23npm/&#39;</span>
<span class="token keyword">let</span> siderEg <span class="token operator">=</span> <span class="token string">&#39;/typora/02frontEnd/23npm/&#39;</span>

<span class="token comment">// 全局变量</span>
<span class="token comment">// 旧文件名数组</span>
<span class="token keyword">let</span> oldFileNames <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token comment">// 最简文件名数组  例如：01概念.md 变为 概念</span>
<span class="token keyword">let</span> simpleNameArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token comment">// 新文件名数组</span>
<span class="token keyword">let</span> newFileNameArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token comment">// 一级标题数组</span>
<span class="token keyword">let</span> h1Arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token comment">// siderbar数组</span>
<span class="token keyword">let</span> siderbarArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token comment">// 扩展名数组</span>
<span class="token keyword">let</span> extrArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

<span class="token keyword">const</span> noteDir <span class="token operator">=</span> <span class="token string">&quot;./笔记/1dart语法&quot;</span>
<span class="token comment">// const newNoteDir = &quot;./newnote/&quot;</span>
<span class="token keyword">const</span> newNoteDir <span class="token operator">=</span> <span class="token string">&quot;./笔记/01dart语法/&quot;</span>

<span class="token comment">// 新笔记文件夹如果不存在就创建</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>newNoteDir<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    fs<span class="token punctuation">.</span><span class="token function">mkdirSync</span><span class="token punctuation">(</span>newNoteDir<span class="token punctuation">)</span>
<span class="token punctuation">}</span>


<span class="token comment">// 匹配文件名</span>
oldFileNames <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span>noteDir<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>oldFileNames<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;文件个数为:&quot;</span> <span class="token operator">+</span> oldFileNames<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
simpleNameArr <span class="token operator">=</span> oldFileNames<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">val<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token comment">// 最后不是md</span>
    <span class="token comment">// console.log(val.match(/\\d+(_\\d)?.+\\.(\\w+)(?!md)$/));</span>
    extrArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>val<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\d+(_\\d)?.+\\.(\\w+)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> val<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\d+(_\\d)?(.+)\\.(\\w+)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;文件个数匹配成功的个数为：&quot;</span> <span class="token operator">+</span> simpleNameArr<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 准备新文件名、一级标题、siderbar</span>
simpleNameArr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">val<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> orderNum <span class="token operator">=</span> index <span class="token operator">+</span> <span class="token number">1</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>simpleNameArr<span class="token punctuation">.</span>length<span class="token operator">&lt;</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        orderNum <span class="token operator">=</span> <span class="token punctuation">(</span>orderNum <span class="token operator">+</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">padStart</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>simpleNameArr<span class="token punctuation">.</span>length<span class="token operator">&gt;=</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        orderNum <span class="token operator">=</span> <span class="token punctuation">(</span>orderNum <span class="token operator">+</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">padStart</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 1. 新文件名</span>
    <span class="token keyword">const</span> newFileName <span class="token operator">=</span> orderNum<span class="token operator">+</span>val<span class="token operator">+</span><span class="token string">&quot;.md&quot;</span>
    newFileNameArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>newFileName<span class="token punctuation">)</span>
    <span class="token comment">// 2. 一级标题</span>
    h1Arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&quot;# &quot;</span> <span class="token operator">+</span> orderNum <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> val<span class="token punctuation">)</span>
    <span class="token comment">// 3. siderbar</span>
    siderbarArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>siderEg<span class="token operator">+</span>newFileName<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 将siderbar写入txt文件</span>
fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span><span class="token string">&quot;./siderbar.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;siderbar内容条数为:&quot;</span> <span class="token operator">+</span> siderbarArr<span class="token punctuation">.</span>length<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">encoding</span><span class="token operator">:</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
siderbarArr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">val</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    fs<span class="token punctuation">.</span><span class="token function">appendFileSync</span><span class="token punctuation">(</span><span class="token string">&quot;./siderbar.txt&quot;</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\r\\n&#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>val<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;,</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 清空newnote目录</span>
<span class="token keyword">let</span> newnoteFiles <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span>newNoteDir<span class="token punctuation">)</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>newnoteFiles<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 需要清空newnote目录</span>
    newnoteFiles<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">val<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        fs<span class="token punctuation">.</span><span class="token function">unlinkSync</span><span class="token punctuation">(</span>newNoteDir <span class="token operator">+</span> val<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// 创建新.md文件</span>
oldFileNames<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">val<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> fileContent <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>noteDir <span class="token operator">+</span> <span class="token string">&#39;/&#39;</span> <span class="token operator">+</span> val<span class="token punctuation">,</span> <span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span>
    <span class="token comment">// 正则含义：内容开端必须是(一级标题)或(换行符加一级标题)，一级标题#前面只能是换行符，将这样的一级标题换为空</span>
    <span class="token keyword">let</span> newFileContent <span class="token operator">=</span> fileContent<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(?&lt;!\\S)\\s*# (.+)\\r?\\n?</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>extrArr<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&quot;md&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        newFileContent <span class="token operator">=</span> h1Arr<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">&quot;\\n&quot;</span> <span class="token operator">+</span> newFileContent 
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        newFileContent <span class="token operator">=</span> h1Arr<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">&quot;\\n&quot;</span> <span class="token operator">+</span> <span class="token string">&quot;\`\`\`&quot;</span> <span class="token operator">+</span> extrArr<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">&#39;\\n&#39;</span> <span class="token operator">+</span> newFileContent <span class="token operator">+</span> <span class="token string">&quot;\\n\`\`\`&quot;</span>
    <span class="token punctuation">}</span>
    fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span>newNoteDir <span class="token operator">+</span> newFileNameArr<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">,</span> newFileContent<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","04批量变笔记.html.vue"]]);export{r as default};
