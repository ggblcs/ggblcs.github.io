import{_ as n,p as s,q as a,a1 as e}from"./framework-96b046e1.js";const t={},p=e(`<h1 id="_07-requestanimationframe" tabindex="-1"><a class="header-anchor" href="#_07-requestanimationframe" aria-hidden="true">#</a> 07 requestAnimationFrame</h1><p>正常情况下每秒的帧数固定，在这里我们创建了一个使渲染器能够在每次屏幕刷新时对场景进行绘制的循环（在大多数屏幕上，刷新率一般是60次/秒）。，但这并不能保证每秒一定是60次，有时候可能长一点，有时候短一点。也就是不能保证动画的执行时间固定。这会导致动画时快时慢。</p><p>一个动画想在3s准时做完，怎么搞？</p><p><strong>通过时间参数控制动画</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token parameter">time</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    cube<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">+=</span> <span class="token number">0.01</span>

    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span>
    <span class="token keyword">let</span> t <span class="token operator">=</span> time <span class="token operator">/</span> <span class="token number">1000</span> <span class="token operator">%</span> <span class="token number">5</span> <span class="token comment">// 毫秒</span>
    cube<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> t<span class="token operator">*</span><span class="token number">1</span> <span class="token comment">// 位置等于时间乘以速度</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cube<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">&gt;</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cube<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token punctuation">}</span>

    <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>render<span class="token punctuation">)</span>
    <span class="token comment">// animate()</span>
    renderer<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>scene<span class="token punctuation">,</span> camera<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),o=[p];function c(i,l){return s(),a("div",null,o)}const r=n(t,[["render",c],["__file","07requestAnimationFrame.html.vue"]]);export{r as default};
