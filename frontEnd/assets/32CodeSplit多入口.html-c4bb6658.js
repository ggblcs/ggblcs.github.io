import{_ as n,p as s,q as a,a1 as p}from"./framework-96b046e1.js";const t={},e=p(`<h1 id="_32-codesplit多入口" tabindex="-1"><a class="header-anchor" href="#_32-codesplit多入口" aria-hidden="true">#</a> 32 CodeSplit多入口</h1><ul><li>打包会将js代码打包到一个文件中，体积太大。我们如果只要渲染首页，就应该加载首页的js，其他文件不应该加载。</li><li>所以需要对打包的文件进行代码分割，生成多个js文件。渲染哪个页面就加载某个js文件，加载资源越少，加载速度越快。</li></ul><ol><li>分割文件</li><li>按需加载，需要哪个文件就加载哪个文件。</li></ol><p>多入口：<code>main.js</code> <code>app.js</code> 一个html</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">app</span><span class="token operator">:</span> <span class="token string">&quot;./src/app.js&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">main</span><span class="token operator">:</span> <span class="token string">&quot;./src/main.js&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">path</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&quot;dist&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">&quot;[name].js&quot;</span> <span class="token comment">// [name] 原来的名字</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">template</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&quot;public/index.html&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>打包结果：输出两个js文件，app.js main.js</p><p>结论：不入口就输出多个，接单入口就输出单个Js文件</p>`,7),o=[e];function l(c,i){return s(),a("div",null,o)}const u=n(t,[["render",l],["__file","32CodeSplit多入口.html.vue"]]);export{u as default};
