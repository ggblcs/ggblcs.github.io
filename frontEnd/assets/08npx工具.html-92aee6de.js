import{_ as e,p as a,q as n,a1 as s}from"./framework-96b046e1.js";const c={},p=s(`<h1 id="_08-npx工具" tabindex="-1"><a class="header-anchor" href="#_08-npx工具" aria-hidden="true">#</a> 08 npx工具</h1><blockquote><p>npx是npm5.2之后自带的一个命令，是用来调用项目中某个模块的指令</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 比如全局安装webpack后查看版本号</span>
webpack <span class="token parameter variable">--verson</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 局部安装webpack后，查看版本号</span>
npx webpack <span class="token parameter variable">--verson</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>以webpack命令为例，会先在当前目录(而不是项目的node_modules，这是操作系统的指令)查找webpack可执行文件，如果没有找到，就会去查找环境变量。</p><p>npx会查找node_modules的bin目录的可执行文件。</p><p>可以把npx webpack命令放在package.json的script中</p><p>scripts中写入<code>&quot;build&quot;: &quot;webpack&quot;</code>，此时就不需要写npx，也会优先从node_modules中找。</p>`,8),d=[p];function o(i,l){return a(),n("div",null,d)}const r=e(c,[["render",o],["__file","08npx工具.html.vue"]]);export{r as default};
