import{_ as n,p as s,q as a,a1 as p}from"./framework-96b046e1.js";const t={},e=p(`<h1 id="_07-字典与集合" tabindex="-1"><a class="header-anchor" href="#_07-字典与集合" aria-hidden="true">#</a> 07 字典与集合</h1><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>person <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;zs&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span> <span class="token number">88</span><span class="token punctuation">}</span>
<span class="token keyword">print</span> <span class="token punctuation">(</span>person<span class="token punctuation">)</span> <span class="token comment"># {&#39;name&#39;: &#39;zs&#39;, &#39;age&#39;: 88}</span>
<span class="token keyword">print</span> <span class="token punctuation">(</span>person<span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># zs</span>
<span class="token keyword">print</span> <span class="token punctuation">(</span>person<span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token comment"># 报错</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_01-添加键值对" tabindex="-1"><a class="header-anchor" href="#_01-添加键值对" aria-hidden="true">#</a> 01 添加键值对</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>person <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
person<span class="token punctuation">[</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;zs&#39;</span> 
<span class="token keyword">print</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span> <span class="token comment"># {&#39;name&#39;: &#39;zs&#39;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_02-修改字典中的值" tabindex="-1"><a class="header-anchor" href="#_02-修改字典中的值" aria-hidden="true">#</a> 02 修改字典中的值</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>person <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&#39;zs&#39;</span><span class="token punctuation">}</span>
person<span class="token punctuation">[</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;ls&quot;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span> <span class="token comment"># {&#39;name&#39;: &#39;ls&#39;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_03-删除键值对" tabindex="-1"><a class="header-anchor" href="#_03-删除键值对" aria-hidden="true">#</a> 03 删除键值对</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>person <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;zs&quot;</span><span class="token punctuation">}</span>
<span class="token keyword">del</span> person<span class="token punctuation">[</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span> <span class="token comment"># {}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_04-使用-get-来访问值" tabindex="-1"><a class="header-anchor" href="#_04-使用-get-来访问值" aria-hidden="true">#</a> 04 使用 get()来访问值</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># get()传递两个参数，第一个是需要访问的键，第二个是如果为空返回的默认值</span>
person <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;zs&#39;</span> <span class="token punctuation">}</span>
<span class="token comment"># print(person[&#39;age&#39;]) # 报错</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;No age&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># No age</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_05-遍历字典" tabindex="-1"><a class="header-anchor" href="#_05-遍历字典" aria-hidden="true">#</a> 05 遍历字典</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>person <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;zs&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span> <span class="token number">88</span><span class="token punctuation">}</span>
<span class="token keyword">for</span> k<span class="token punctuation">,</span> v <span class="token keyword">in</span> person<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;key = </span><span class="token interpolation"><span class="token punctuation">{</span>k<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span> <span class="token comment"># key = name key = age</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;value = </span><span class="token interpolation"><span class="token punctuation">{</span>v<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
<span class="token comment"># 注意：for语句的第二部分包含字典名和方法.items()，它返回一个键值对列表</span>
<span class="token comment"># for循环依次将每个键值对赋给指定的两个变量</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_06-遍历字典中的所有键" tabindex="-1"><a class="header-anchor" href="#_06-遍历字典中的所有键" aria-hidden="true">#</a> 06 遍历字典中的所有键</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>person <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;zs&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span> <span class="token number">88</span><span class="token punctuation">}</span>
<span class="token keyword">for</span> k <span class="token keyword">in</span> person<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;key = </span><span class="token interpolation"><span class="token punctuation">{</span>k<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span> <span class="token comment"># key = name key = age</span>
<span class="token comment"># 或者如下，输出一样</span>
person <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;zs&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span> <span class="token number">88</span><span class="token punctuation">}</span>
<span class="token keyword">for</span> k <span class="token keyword">in</span> person<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;key = </span><span class="token interpolation"><span class="token punctuation">{</span>k<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span> <span class="token comment"># key = name key = age  </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>举个例子：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">if</span> <span class="token string">&#39;name&#39;</span> <span class="token keyword">in</span> person<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_07-按特定顺序遍历字典中的所有键" tabindex="-1"><a class="header-anchor" href="#_07-按特定顺序遍历字典中的所有键" aria-hidden="true">#</a> 07 按特定顺序遍历字典中的所有键</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>person <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;zs&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span> <span class="token number">88</span><span class="token punctuation">}</span>
<span class="token keyword">for</span> k <span class="token keyword">in</span> <span class="token builtin">sorted</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;key = </span><span class="token interpolation"><span class="token punctuation">{</span>k<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span> <span class="token comment"># key = age key = name</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_08-遍历字典中所有的值" tabindex="-1"><a class="header-anchor" href="#_08-遍历字典中所有的值" aria-hidden="true">#</a> 08 遍历字典中所有的值</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>person <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;zs&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span> <span class="token number">88</span><span class="token punctuation">}</span>
<span class="token keyword">for</span> v <span class="token keyword">in</span> person<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;key = </span><span class="token interpolation"><span class="token punctuation">{</span>v<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span> <span class="token comment"># key = zs key = 88</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_09-使用集合过滤重复值" tabindex="-1"><a class="header-anchor" href="#_09-使用集合过滤重复值" aria-hidden="true">#</a> 09 使用集合过滤重复值</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># set()</span>
person <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&#39;zs&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;apple&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ls&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;apple&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ww&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;orange&#39;</span><span class="token punctuation">}</span>
<span class="token keyword">for</span> v <span class="token keyword">in</span> <span class="token builtin">set</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;v = </span><span class="token interpolation"><span class="token punctuation">{</span>v<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span> <span class="token comment">#v = orange v = apple</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_10-定义集合" tabindex="-1"><a class="header-anchor" href="#_10-定义集合" aria-hidden="true">#</a> 10 定义集合</h2><p>注意点：集合和字典很容易混淆，因为他们都是用一对花括号定义的。当花括号内没有键值对时，定义的很可能是集合。不同于列表和字典，集合不会以特定顺序存储元素。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>person <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&#39;zs&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ls&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;zs&#39;</span> <span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span> <span class="token comment"># {&#39;zs&#39;, &#39;ls&#39;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,25),o=[e];function c(i,l){return s(),a("div",null,o)}const r=n(t,[["render",c],["__file","07字典与集合.html.vue"]]);export{r as default};
