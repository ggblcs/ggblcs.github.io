import{_ as n,p as s,q as a,a1 as t}from"./framework-96b046e1.js";const e={},p=t(`<h1 id="_06-多个文件和文件夹" tabindex="-1"><a class="header-anchor" href="#_06-多个文件和文件夹" aria-hidden="true">#</a> 06 多个文件和文件夹</h1><p>多个文件</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>file<span class="token punctuation">&quot;</span></span> <span class="token attr-name">multiple</span><span class="token punctuation">/&gt;</span></span>
<span class="token comment">&lt;!-- multiple --&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>文件夹</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>file<span class="token punctuation">&quot;</span></span> <span class="token attr-name">webkitdirectory</span> <span class="token attr-name">mozdirectory</span> <span class="token attr-name">odirectory</span><span class="token punctuation">/&gt;</span></span>
<span class="token comment">&lt;!-- webkitdirectory mozdirectory odirectory --&gt;</span>
<span class="token comment">&lt;!-- 写三个就是为了适配浏览器 --&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>拖拽多个文件 文件夹</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>div<span class="token punctuation">.</span><span class="token function-variable function">ondrop</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> item <span class="token keyword">of</span> e<span class="token punctuation">.</span>dataTransfer<span class="token punctuation">.</span>items<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> entry <span class="token operator">=</span> item<span class="token punctuation">.</span><span class="token function">webkitGetAsEntry</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 将来极有可能换名字 getAsEntry()</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>entry<span class="token punctuation">.</span>isDirectory<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 目录</span>
            <span class="token keyword">const</span> reader <span class="token operator">=</span> entry<span class="token punctuation">.</span><span class="token function">createReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            reader<span class="token punctuation">.</span><span class="token function">readEntries</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">en</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token comment">// 拿到所有entry对象</span>

            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// 文件</span>
            entry<span class="token punctuation">.</span><span class="token function">file</span><span class="token punctuation">(</span> <span class="token parameter">f</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span>
                <span class="token comment">// file 对象</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后: 上传多个文件大概有两种形式：</p><ol><li>合并为一次请求，发送，当文件过大时，一个发送失败就要全部重新发送，不好。</li><li>多个文件多个请求，可以监听到每一个文件的上传进度，能控制每一个文件，更灵活</li></ol>`,9),c=[p];function o(l,i){return s(),a("div",null,c)}const r=n(e,[["render",o],["__file","06多个文件和文件夹.html.vue"]]);export{r as default};
