import{_ as n,p as s,q as a,a1 as t}from"./framework-96b046e1.js";const e={},p=t(`<h1 id="_13-函数" tabindex="-1"><a class="header-anchor" href="#_13-函数" aria-hidden="true">#</a> 13 函数</h1><h2 id="_1-定义函数" tabindex="-1"><a class="header-anchor" href="#_1-定义函数" aria-hidden="true">#</a> 1 定义函数</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">get_user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span>

get_user<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-形参和实参" tabindex="-1"><a class="header-anchor" href="#_2-形参和实参" aria-hidden="true">#</a> 2 形参和实参</h2><ol><li>在函数get_user的定义中，变量username是一个形参，即函数完成工作所需的信息。</li><li>在调用函数时，代码<code>get_user(&#39;xiaoming&#39;)</code>中，值小明是一个实参，即调用函数时传递给函数的信息。</li></ol><h2 id="_3-位置实参和关键字实参" tabindex="-1"><a class="header-anchor" href="#_3-位置实参和关键字实参" aria-hidden="true">#</a> 3 位置实参和关键字实参</h2><ol><li><p>位置实参：调用函数时，python必须将函数调用中的每个实参都关联到函数定义中的一个形参，为此，最简单的关联方式是基于实参的顺序，这种关联方式称为位置实参。</p></li><li><p>关键字实参：关键字实参是传递给函数的名称值对。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">describe_pet</span><span class="token punctuation">(</span><span class="token builtin">type</span> <span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;I have a </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">type</span><span class="token punctuation">}</span></span><span class="token string">, Its name is </span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>

describe_pet<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">&#39;zs&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token string">&#39;dog&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="_4-默认值" tabindex="-1"><a class="header-anchor" href="#_4-默认值" aria-hidden="true">#</a> 4 默认值</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">describe_pet</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token string">&#39;dog&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;I have a </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">type</span><span class="token punctuation">}</span></span><span class="token string">, Its name is </span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>

describe_pet<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">&#39;zs&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-禁止函数修改列表" tabindex="-1"><a class="header-anchor" href="#_5-禁止函数修改列表" aria-hidden="true">#</a> 5 禁止函数修改列表</h2><p>操作：复制一下列表。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># printList(list[:])</span>

<span class="token keyword">def</span> <span class="token function">printList</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token builtin">list</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;m&#39;</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span> <span class="token comment"># [&#39;m&#39;, &#39;b&#39;, &#39;c&#39;]</span>
<span class="token builtin">list</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span>
printList<span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span> 
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span> <span class="token comment"># [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-传递任意数量的实参" tabindex="-1"><a class="header-anchor" href="#_6-传递任意数量的实参" aria-hidden="true">#</a> 6 传递任意数量的实参</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">make_pizza</span><span class="token punctuation">(</span><span class="token operator">*</span> toppings<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>toppings<span class="token punctuation">)</span> <span class="token comment"># (&#39;a&#39;, &#39;b&#39;)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>形参名<code>* toppings</code>中的星号让Python创建一个名为toppings的空元组中，并将收到的所有值都封装到这个元组中。</p><h2 id="_7-结合使用位置实参和任意数量实参" tabindex="-1"><a class="header-anchor" href="#_7-结合使用位置实参和任意数量实参" aria-hidden="true">#</a> 7 结合使用位置实参和任意数量实参</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">make_pizza</span><span class="token punctuation">(</span>size<span class="token punctuation">,</span> <span class="token operator">*</span>toppings<span class="token punctuation">)</span><span class="token punctuation">:</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>注意点：必须将size放在前面，带星号的放后面。</p><h2 id="_8-使用任意数量的关键字实参" tabindex="-1"><a class="header-anchor" href="#_8-使用任意数量的关键字实参" aria-hidden="true">#</a> 8 使用任意数量的关键字实参</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">build_profile</span><span class="token punctuation">(</span>first<span class="token punctuation">,</span> last<span class="token punctuation">,</span> <span class="token operator">**</span>user_info<span class="token punctuation">)</span><span class="token punctuation">:</span>
    user_info<span class="token punctuation">[</span><span class="token string">&#39;first&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> first
    user_info<span class="token punctuation">[</span><span class="token string">&#39;last&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> last
    <span class="token keyword">print</span><span class="token punctuation">(</span>user_info<span class="token punctuation">)</span>

build_profile<span class="token punctuation">(</span><span class="token string">&#39;赵&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;桓熠&#39;</span><span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">,</span> sex<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token comment"># {&#39;age&#39;: 18, &#39;sex&#39;: 1, &#39;first&#39;: &#39;赵&#39;, &#39;last&#39;: &#39;桓熠&#39;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>形参<code>**user_info</code>中的两个星号让Python创建一个名为user_info的空字典，并将收到的所有名称值对都放到这个字典中。</p>`,21),i=[p];function o(c,l){return s(),a("div",null,i)}const r=n(e,[["render",o],["__file","13函数.html.vue"]]);export{r as default};
