import{_ as a,p as n,q as s,a1 as e}from"./framework-96b046e1.js";const r={},o=e(`<h1 id="六中数据类型" tabindex="-1"><a class="header-anchor" href="#六中数据类型" aria-hidden="true">#</a> 六中数据类型</h1><h2 id="原始类型" tabindex="-1"><a class="header-anchor" href="#原始类型" aria-hidden="true">#</a> 原始类型</h2><h3 id="number" tabindex="-1"><a class="header-anchor" href="#number" aria-hidden="true">#</a> number</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> b1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> b2<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> b3<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> b4<span class="token operator">=</span><span class="token number">0xFF</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> b5<span class="token operator">=</span><span class="token number">067</span><span class="token punctuation">;</span>		<span class="token comment">//8进制</span>
<span class="token keyword">var</span> b6<span class="token operator">=</span><span class="token number">1.2e+5</span><span class="token punctuation">;</span>	<span class="token comment">//科学计数法</span>
<span class="token keyword">var</span> b7<span class="token operator">=</span><span class="token number">1.2e-5</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意点：</p><ol><li>变量必须先声明才能使用。</li><li>如果写了<code>console.log(c); var c=10;</code>这种代码顺序不会报错，因为js中有变量声明提升的操作，就会把<code>var c;</code>提升到代码的最前面，但是<code>c=10</code>；还停留在原地。最终的运行结果就会显示undefined。</li><li>可以用逗号隔开多个定义：<code>var a=10 , b=20 , c=30;</code>.</li></ol><h3 id="string" tabindex="-1"><a class="header-anchor" href="#string" aria-hidden="true">#</a> string</h3><h3 id="boolean" tabindex="-1"><a class="header-anchor" href="#boolean" aria-hidden="true">#</a> boolean</h3><h3 id="null-空值" tabindex="-1"><a class="header-anchor" href="#null-空值" aria-hidden="true">#</a> null（空值）</h3><h3 id="undefined-未定义" tabindex="-1"><a class="header-anchor" href="#undefined-未定义" aria-hidden="true">#</a> undefined(未定义)</h3><blockquote><p>var d1; //定义变量未赋值就是未定义</p></blockquote><h2 id="对象" tabindex="-1"><a class="header-anchor" href="#对象" aria-hidden="true">#</a> 对象</h2><h3 id="object" tabindex="-1"><a class="header-anchor" href="#object" aria-hidden="true">#</a> object</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> obj<span class="token operator">=</span><span class="token punctuation">{</span>	<span class="token comment">//{}内写代码块</span>
    <span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>	<span class="token comment">//让a=1</span>
    <span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">2</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span>log（obj）<span class="token comment">//打印obj</span>
console<span class="token punctuation">.</span>log（obj<span class="token punctuation">.</span>a）<span class="token comment">//打印a的值</span>
obj<span class="token punctuation">.</span>a<span class="token operator">=</span><span class="token number">20</span>；		<span class="token comment">//让a=20</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="function-函数" tabindex="-1"><a class="header-anchor" href="#function-函数" aria-hidden="true">#</a> Function（函数）</h4><h4 id="arry-数组" tabindex="-1"><a class="header-anchor" href="#arry-数组" aria-hidden="true">#</a> Arry（数组）</h4><h4 id="date-日期" tabindex="-1"><a class="header-anchor" href="#date-日期" aria-hidden="true">#</a> Date（日期）</h4><h3 id="es6中" tabindex="-1"><a class="header-anchor" href="#es6中" aria-hidden="true">#</a> ES6中</h3><h4 id="symbol-独一无二的类型" tabindex="-1"><a class="header-anchor" href="#symbol-独一无二的类型" aria-hidden="true">#</a> symbol//独一无二的类型</h4>`,19),t=[o];function c(i,p){return n(),s("div",null,t)}const l=a(r,[["render",c],["__file","02六种数据类型.html.vue"]]);export{l as default};
