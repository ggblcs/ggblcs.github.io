import{_ as e,p as t,q as n,a1 as i}from"./framework-96b046e1.js";const o={},c=i('<h1 id="_03-z类的前生今世" tabindex="-1"><a class="header-anchor" href="#_03-z类的前生今世" aria-hidden="true">#</a> 03 z类的前生今世</h1><p>工厂函数（有<code>let obj = {}; return obj;</code>）。</p><p>构造函数（使用关键字this，创建对象通过new <code>this.name = name</code>）。</p><p>类</p><p>拓展：</p><ol><li>工厂函数中使用new创建对象也是，返回什么new什么。new出的东西由return来决定。这就是return的权利。</li><li>new的本质就是 <code>let this = {}; return this;</code>，当然除了这些，还有别的，这个别的就是涉及到原型与原型链了。</li><li>不用this就是局部变量，又称私有属性。私有属性只能通过get，set方法访问。构造函数中不使用this，与工厂函数中不使用obj作用效果相同。例如：<code>let num = 0;</code>没使用this，写在构造函数中，那么num就是一个私有变量。如果new两个对象，两个对象的num是不同的，但都是私有的。</li><li>原型对象中不能用this定义方法和属性。用就报错。</li><li>原型对象中的方法无法访问私有属性。</li></ol>',6),l=[c];function r(s,_){return t(),n("div",null,l)}const d=e(o,[["render",r],["__file","03z类的前生今世.html.vue"]]);export{d as default};
