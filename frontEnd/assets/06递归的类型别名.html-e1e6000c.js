import{_ as s,p as n,q as a,a1 as p}from"./framework-96b046e1.js";const t={},e=p(`<h1 id="_06-递归的类型别名" tabindex="-1"><a class="header-anchor" href="#_06-递归的类型别名" aria-hidden="true">#</a> 06 递归的类型别名</h1><p>书 已经查阅过书，无需更改</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 递归的类型别名</span>
<span class="token comment">// 可以在类型别名类型的属性中使用自己</span>
<span class="token comment">// 例子1</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">B1</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">,</span>
    <span class="token comment">// 一般用于定义一些树状结构或者嵌套结构</span>
    children<span class="token operator">?</span><span class="token operator">:</span><span class="token constant">B1</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> value2<span class="token operator">:</span><span class="token constant">B1</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span><span class="token string">&#39;one&#39;</span><span class="token punctuation">,</span>
    children<span class="token operator">:</span><span class="token punctuation">{</span>
        name<span class="token operator">:</span><span class="token string">&#39;one&#39;</span><span class="token punctuation">,</span>
        children<span class="token operator">:</span><span class="token punctuation">{</span>
            name<span class="token operator">:</span><span class="token string">&#39;one&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// 例子2</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">C1</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>name<span class="token operator">:</span><span class="token constant">C1</span><span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">C2</span></span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">C2</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">C3</span></span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token constant">C3</span>
<span class="token comment">// 例子3</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">D1</span></span> <span class="token operator">=</span> <span class="token builtin">Array</span> <span class="token operator">&lt;</span><span class="token constant">D1</span><span class="token operator">&gt;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">D2</span></span> <span class="token operator">=</span> <span class="token constant">D2</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">D3</span></span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token constant">D3</span><span class="token punctuation">]</span>
<span class="token comment">// 例子4</span>
<span class="token keyword">interface</span> <span class="token class-name"><span class="token constant">E1</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span><span class="token constant">T</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">E2</span></span> <span class="token operator">=</span> <span class="token constant">E1</span><span class="token operator">&lt;</span><span class="token constant">E2</span><span class="token operator">&gt;</span>
<span class="token keyword">class</span> <span class="token class-name"><span class="token constant">E3</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span><span class="token punctuation">{</span>
    name<span class="token operator">:</span><span class="token constant">T</span> <span class="token operator">|</span> <span class="token keyword">undefined</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">E4</span></span> <span class="token operator">=</span> <span class="token constant">E3</span><span class="token operator">&lt;</span><span class="token constant">E4</span><span class="token operator">&gt;</span>
<span class="token comment">// 例子5 递归的类型别名定义Json</span>
<span class="token keyword">type</span> <span class="token class-name">Json</span> <span class="token operator">=</span> <span class="token operator">|</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">|</span> <span class="token punctuation">{</span><span class="token punctuation">[</span>property<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span>Json<span class="token punctuation">}</span> <span class="token operator">|</span> Json<span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> val5<span class="token operator">:</span>Json <span class="token operator">=</span> <span class="token punctuation">{</span>name<span class="token operator">:</span><span class="token string">&#39;ts&#39;</span><span class="token punctuation">,</span> verson<span class="token operator">:</span> <span class="token punctuation">{</span>major<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),o=[e];function c(l,i){return n(),a("div",null,o)}const k=s(t,[["render",c],["__file","06递归的类型别名.html.vue"]]);export{k as default};
