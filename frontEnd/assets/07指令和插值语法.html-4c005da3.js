import{_ as s,p as a,q as n,a1 as e}from"./framework-96b046e1.js";const o={},t=e(`<h1 id="_07-指令和插值语法" tabindex="-1"><a class="header-anchor" href="#_07-指令和插值语法" aria-hidden="true">#</a> 07 指令和插值语法</h1><p>指令和插值 两者中都可以使用 js 语法，例如：<code>{{ uname.split(&#39;&#39;).reverse().join() }}</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>v<span class="token operator">-</span>bind<span class="token operator">:</span> <span class="token operator">-</span><span class="token operator">&gt;</span>  <span class="token operator">:</span>
v<span class="token operator">-</span>on<span class="token operator">:</span> <span class="token operator">-</span><span class="token operator">&gt;</span> @
v<span class="token operator">-</span>once<span class="token operator">:</span>
v<span class="token operator">-</span>slot<span class="token operator">:</span> <span class="token operator">-</span><span class="token operator">&gt;</span> #

<span class="token operator">:</span><span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">&quot;xx&quot;</span> 动态属性
@<span class="token punctuation">[</span>mouseEvent<span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">&quot;xx&quot;</span> 动态事件
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),p=[t];function r(c,l){return a(),n("div",null,p)}const d=s(o,[["render",r],["__file","07指令和插值语法.html.vue"]]);export{d as default};
