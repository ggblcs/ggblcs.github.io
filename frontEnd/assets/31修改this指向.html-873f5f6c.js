import{_ as i,p as l,q as a,a1 as e}from"./framework-96b046e1.js";const t={},h=e('<h1 id="_31-修改this指向" tabindex="-1"><a class="header-anchor" href="#_31-修改this指向" aria-hidden="true">#</a> 31 修改this指向</h1><h3 id="bind-call-apply" tabindex="-1"><a class="header-anchor" href="#bind-call-apply" aria-hidden="true">#</a> bind call apply</h3><p>this是调用当前方法的对象，谁调用就是谁，而这三个方法就是修改这个this的。</p><ol><li>bind方法的作用 <ol><li>修改函数式或方法中的调用者为指定对象。</li><li>返回一个修改之后的新函数给我们。</li><li>可以传递参数，参数写在this的后面。</li></ol></li><li>call方法的作用 <ol><li>修改函数式或方法中的调用者为指定对象。</li><li>立即调用修改后的函数，不会返回一个修改之后的新函数。</li><li>可以传递参数，参数写在this的后面。</li></ol></li><li>apply方法的作用 <ol><li>修改函数式或方法中的调用者为指定对象。</li><li>立即调用修改后的函数，不会返回一个修改之后的新函数。</li><li>可以传递参数，参数必须以数组方式传递。</li></ol></li></ol><h1 id="测试标题-一级标题" tabindex="-1"><a class="header-anchor" href="#测试标题-一级标题" aria-hidden="true">#</a> 测试标题，一级标题</h1>',5),s=[h];function r(c,d){return l(),a("div",null,s)}const o=i(t,[["render",r],["__file","31修改this指向.html.vue"]]);export{o as default};
