import{_ as n,p as s,q as a,a1 as t}from"./framework-96b046e1.js";const e={},p=t(`<h1 id="_103-数据类型总结" tabindex="-1"><a class="header-anchor" href="#_103-数据类型总结" aria-hidden="true">#</a> 103 数据类型总结</h1><table><thead><tr><th>索引</th><th>类型</th><th>例子</th><th>描述</th></tr></thead><tbody><tr><td>1</td><td>number</td><td>1，2，3</td><td>任意数字</td></tr><tr><td>2</td><td>string</td><td>&#39;hello&#39;</td><td>任意字符串</td></tr><tr><td>3</td><td>boolean</td><td>true,false</td><td>布尔值</td></tr><tr><td>4</td><td>字面量</td><td>其本身</td><td>限制变量的值就是该字面量的值</td></tr><tr><td>5</td><td>any</td><td>*</td><td>任意类型</td></tr><tr><td>6</td><td>unknow</td><td>*</td><td>类型安全的any</td></tr><tr><td>7</td><td>void</td><td>空值（undefined）</td><td>没有值（或undefined）</td></tr><tr><td>8</td><td>never</td><td>没有值</td><td>不能是任何值</td></tr><tr><td>9</td><td>object</td><td>{name:&#39;zs&#39;}</td><td>任意的js对象</td></tr><tr><td>10</td><td>array</td><td>[1,1,1]</td><td>任意js数组</td></tr><tr><td>11</td><td>tumple</td><td>[4,5]</td><td>元组，TS新增类型，固定长度的数组</td></tr><tr><td>12</td><td>enum</td><td>enum{A,B}</td><td>枚举，TS新增类型</td></tr></tbody></table><p>使用案例（类型的别名 和 枚举拓展 有不一样的用法，值得一看）：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 1. 声明对象</span>
<span class="token keyword">let</span> obj1<span class="token operator">:</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span>
obj1 <span class="token operator">=</span> <span class="token punctuation">{</span>name<span class="token operator">:</span> <span class="token string">&#39;张三&#39;</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">22</span><span class="token punctuation">}</span>
<span class="token comment">// console.log(obj1);</span>

<span class="token comment">// 2. 可选属性</span>
<span class="token keyword">let</span> obj2<span class="token operator">:</span><span class="token punctuation">{</span> name<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">,</span> age<span class="token operator">?</span><span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">,</span> sex<span class="token operator">?</span><span class="token operator">:</span><span class="token builtin">boolean</span> <span class="token punctuation">}</span>
obj2 <span class="token operator">=</span> <span class="token punctuation">{</span>name<span class="token operator">:</span> <span class="token string">&#39;张三&#39;</span><span class="token punctuation">}</span>
<span class="token comment">// console.log(obj2);</span>

<span class="token comment">// 3. 索引签名</span>
<span class="token keyword">let</span> obj3<span class="token operator">:</span><span class="token punctuation">{</span> name<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>prop<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">}</span>
obj3 <span class="token operator">=</span> <span class="token punctuation">{</span>name<span class="token operator">:</span> <span class="token string">&#39;张三&#39;</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">22</span><span class="token punctuation">}</span>
<span class="token comment">// console.log(obj3);</span>

<span class="token comment">// 4. 声明数组</span>
<span class="token keyword">let</span> arr1<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;22&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;33&#39;</span><span class="token punctuation">]</span>
<span class="token comment">// console.log(arr1)</span>

<span class="token comment">// 5. 声明元组</span>
<span class="token keyword">let</span> arr2<span class="token operator">:</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token builtin">boolean</span><span class="token punctuation">]</span>
arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;zs&#39;</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">]</span>
<span class="token comment">// console.log(arr2);</span>

<span class="token comment">// 6. 声明函数</span>
<span class="token keyword">let</span> <span class="token function-variable function">fun1</span><span class="token operator">:</span><span class="token punctuation">(</span>x<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">number</span>
<span class="token function-variable function">fun1</span> <span class="token operator">=</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> x <span class="token operator">+</span> y
<span class="token punctuation">}</span>
<span class="token comment">// console.log(fun1(0.1, 0.2))</span>

<span class="token comment">// 7. 枚举</span>
<span class="token comment">// 枚举前</span>
<span class="token keyword">let</span> enum1<span class="token operator">:</span><span class="token punctuation">{</span> name<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">,</span> sex<span class="token operator">:</span> <span class="token number">0</span> <span class="token operator">|</span> <span class="token number">1</span> <span class="token punctuation">}</span>
enum1 <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;zs&#39;</span><span class="token punctuation">,</span> sex<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">}</span>
<span class="token comment">// console.log(enum1);</span>
<span class="token comment">// 枚举后</span>
<span class="token keyword">enum</span> Gender<span class="token punctuation">{</span>
    Male <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
    Female <span class="token operator">=</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> enum2<span class="token operator">:</span><span class="token punctuation">{</span> name<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">,</span> sex<span class="token operator">:</span>Gender <span class="token punctuation">}</span>
enum2 <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;张三&#39;</span><span class="token punctuation">,</span> sex<span class="token operator">:</span> Gender<span class="token punctuation">.</span>Female <span class="token punctuation">}</span>
<span class="token comment">// console.log(enum2);</span>
<span class="token comment">// 扩展</span>
<span class="token keyword">let</span> j<span class="token operator">:</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token comment">// 或</span>
<span class="token keyword">let</span> q<span class="token operator">:</span><span class="token builtin">string</span> <span class="token operator">&amp;</span> <span class="token builtin">number</span> <span class="token comment">// 且</span>
<span class="token keyword">let</span> m<span class="token operator">:</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span> <span class="token operator">&amp;</span> <span class="token punctuation">{</span> age<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span> <span class="token comment">// 且的正确使用</span>

<span class="token comment">// 类型的别名</span>
<span class="token keyword">let</span> type1<span class="token operator">:</span> <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">3</span> <span class="token operator">|</span> <span class="token number">4</span>
<span class="token keyword">let</span> type2<span class="token operator">:</span> <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">3</span> <span class="token operator">|</span> <span class="token number">4</span>
<span class="token keyword">type</span> <span class="token class-name">myType</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">3</span> <span class="token operator">|</span> <span class="token number">4</span>
<span class="token keyword">let</span> type3<span class="token operator">:</span> myType
type3 <span class="token operator">=</span> <span class="token number">4</span>
<span class="token comment">// console.log(type3);</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),o=[p];function l(c,r){return s(),a("div",null,o)}const u=n(e,[["render",l],["__file","103数据类型总结.html.vue"]]);export{u as default};
