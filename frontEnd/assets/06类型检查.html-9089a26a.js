import{_ as n,p as s,q as a,a1 as e}from"./framework-96b046e1.js";const t={},o=e(`<h1 id="_06-类型检查" tabindex="-1"><a class="header-anchor" href="#_06-类型检查" aria-hidden="true">#</a> 06 类型检查</h1><p>类型检查</p><p>既可以在编译时进行，即静态类型检查；</p><p>也可以在运行时进行，即动态类型检查；</p><p>ts支持静态类型检查</p><p>js支持动态类型检查</p><h2 id="_1-非严格模式" tabindex="-1"><a class="header-anchor" href="#_1-非严格模式" aria-hidden="true">#</a> 1 非严格模式</h2><p>该模式下不会对undefined值和null值过多限制。</p><ol><li><p>非严格模式允许将undefined和null值赋给string类型变量。严格模式两个都不允许。</p></li><li><p>非严格模式下void类型值可以是null和undefined，严格模式只能是undefined。</p></li></ol><h2 id="_2-严格模式" tabindex="-1"><a class="header-anchor" href="#_2-严格模式" aria-hidden="true">#</a> 2 严格模式</h2><p><code>tsconfig.json</code></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;strict&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ES5&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),p=[o];function i(l,r){return s(),a("div",null,p)}const d=n(t,[["render",i],["__file","06类型检查.html.vue"]]);export{d as default};
