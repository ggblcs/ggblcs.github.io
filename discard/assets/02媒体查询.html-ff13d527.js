import{_ as e,p as a,q as s,a1 as n}from"./framework-96b046e1.js";const t={},i=n(`<p>**概念：**让我们根据设备显示器的特性（如视口宽度、屏幕比例、设备方向：纵向或横向）为其设定css样式，媒体查询由媒体类型和一个或多个检测媒体特性的条件表达式组成。</p><h2 id="媒体查询" tabindex="-1"><a class="header-anchor" href="#媒体查询" aria-hidden="true">#</a> 媒体查询</h2><p>语法一：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token atrule"><span class="token rule">@media</span> mediatype <span class="token keyword">and</span>|<span class="token keyword">not</span>|<span class="token keyword">only</span><span class="token punctuation">(</span>media feature<span class="token punctuation">)</span></span><span class="token punctuation">{</span>
	CSS-Code<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>语法二：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>&lt;link rel=<span class="token string">&quot;stylesheet&quot;</span> media=<span class="token string">&quot;mediatype and|not|only(media feature)&quot;</span>  href=<span class="token string">&quot;mystylesheet.css&quot;</span>&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="弹性盒子" tabindex="-1"><a class="header-anchor" href="#弹性盒子" aria-hidden="true">#</a> 弹性盒子</h2><p>有display:flex;属性，父元素设置以下属性</p><h4 id="flex-wrap" tabindex="-1"><a class="header-anchor" href="#flex-wrap" aria-hidden="true">#</a> flex-wrap:</h4><ol><li>no-wrap;默认情况下，浏览器窗口缩小，子盒子不会换行，而是进行一个删减，子盒子变窄，适应父元素大盒子。</li><li>wrap;强制换行，父盒子的宽度容不下子盒子时，强制换行。</li><li>wrap-reverse;换行，子盒子排列顺序有变，自右向左，从下向上排列。</li></ol><h4 id="justify-content" tabindex="-1"><a class="header-anchor" href="#justify-content" aria-hidden="true">#</a> justify-content:</h4><ol><li>flex-start;默认，子盒子从左向右紧密排列。</li><li>flex-end;子盒子从右向左紧密排列。</li><li>center;中间紧密对齐。</li><li>space-between;第一个盒子紧贴左端，最后一个盒子紧贴右端，中间平均分布。</li><li>space-around;左右margin。</li></ol>`,12),l=[i];function r(c,d){return a(),s("div",null,l)}const p=e(t,[["render",r],["__file","02媒体查询.html.vue"]]);export{p as default};
