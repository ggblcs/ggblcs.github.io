import{_ as a,p as s,q as n,a1 as e}from"./framework-96b046e1.js";const t={},p=e(`<h1 id="_37-preload与prefetch" tabindex="-1"><a class="header-anchor" href="#_37-preload与prefetch" aria-hidden="true">#</a> 37 preload与prefetch</h1><p>(猜测是只能预加载，按需引入(动态引入的内容))</p><p>之前 <code>import()</code> 函数加载称为按需加载(懒加载），用户用使用才加载，能不能别等用户用时下载，等浏览器空闲了就开始加载。要不然待加载文件太大，用户用时才反应半天，用户体验不好。</p><ol><li><p>preload：告诉浏览器立即加载（高优先级，只能加载当前一面使用的资源）</p></li><li><p>prefetch：告诉浏览器，空闲时加载（低优先级，还能加载下个页面用的）。</p></li></ol><ul><li><p>共同点：都只会加载资源，并不执行，都有缓存，用户用时就立马用。</p></li><li><p>问题：他们兼容性较差，去can I use 网站查一下兼容性问题</p></li></ul><p>下载</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> @vue/preload-webpack-plugin <span class="token parameter variable">-D</span> <span class="token comment"># npm 官网搜一下用法</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">PreloadWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">rel</span><span class="token operator">:</span> <span class="token string">&quot;preload&quot;</span><span class="token punctuation">,</span>
    <span class="token keyword">as</span><span class="token operator">:</span> <span class="token string">&quot;script&quot;</span> <span class="token comment">// 作为script优先级使用，不用改</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>观察<code>index.html</code> （生成的）</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">defer</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>defer<span class="token punctuation">&quot;</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>xxx<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- 空闲时加载 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>xxx<span class="token punctuation">&quot;</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stylesheet<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果使用prefetch</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">PreloadWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">rel</span><span class="token operator">:</span> <span class="token string">&quot;prefetch&quot;</span> <span class="token comment">// 后面没有as</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从浏览器观察网络，<code>xxx.chunk.js</code>的priority （权重）为lowest（最低），空闲时缓存，当用户使用相关功能时，立刻加载完成。</p>`,13),l=[p];function c(o,i){return s(),n("div",null,l)}const u=a(t,[["render",c],["__file","37preload与prefetch.html.vue"]]);export{u as default};
