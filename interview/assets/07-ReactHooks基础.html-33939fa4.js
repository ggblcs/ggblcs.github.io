import{_ as p,M as e,p as o,q as c,R as n,t as a,N as l,Q as i,a1 as s}from"./framework-96b046e1.js";const u={},r=s('<h1 id="_07-reacthooks基础" tabindex="-1"><a class="header-anchor" href="#_07-reacthooks基础" aria-hidden="true">#</a> 07 -ReactHooks基础</h1><hr><h2 id="hooks-是什么" tabindex="-1"><a class="header-anchor" href="#hooks-是什么" aria-hidden="true">#</a> Hooks 是什么？</h2><p><strong>目标</strong>：了解什么是 react hooks？</p><p><strong>什么是 Hooks</strong></p><p><code>Hooks</code> 是 ”钩子“ 的意思，钩东西用的，用在编程领域是指代 <strong>把某些东西/功能从外部引入</strong>。</p><ul><li><p>React 在 <code>v16.8</code> 版本中引入了 <code>Hooks</code> 功能</p></li><li><p><code>Hooks</code> 其实是一些函数而已，它们能<strong>让函数组件拥有状态和生命周期</strong>。这些功能原先只有类组件才有，而 Hooks 的引入加强了函数组件</p></li></ul><p><strong>React v16.8 前后的开发模式对比：</strong></p><p>React v16.8 之前：</p><ul><li>以类组件为主，函数组件为辅或干脆不使用函数组件</li></ul><p>React v16.8 以后：</p><ul><li><p>沿用之前的老模式</p></li><li><p>函数组件 + Hooks，是目前的流行趋势</p></li><li><p>混用，常见于维护中的老项目</p></li></ul><p><strong>总结</strong></p><ul><li>有 Hooks 以后，<strong>函数组件</strong> 不再是功能简单的无状态组件，它已和类组件属于同等级别</li></ul><hr><h2 id="为什么需要-hooks" tabindex="-1"><a class="header-anchor" href="#为什么需要-hooks" aria-hidden="true">#</a> 为什么需要 Hooks</h2><p><strong>目标</strong>：了解 Hooks 能解决什么样的问题</p><p><strong>一、解决类组件的 class 语法存在的一些问题</strong></p><ul><li>class 中的 this 对新手来说是个心智负担</li><li>class 相比函数来说，不利于代码压缩和优化，也不利于 TypeScript 的类型推导</li><li>class 代码的逻辑是跳跃不连贯的：一组功能相关的代码，可能会分散写在不同生命周期函数中，比如： <ul><li>注册事件 window.addEventListener(&#39;resize&#39;, this.fn) 会写在 <code>componentDidMount</code> 里</li><li>销毁事件 window.removeEventListener(&#39;resize&#39;, this.fn) 会写在 <code>componentWillUnmount</code> 里</li></ul></li></ul><p>!---<a href="images/class%E7%BB%84%E4%BB%B6vs.hooks.jpeg">class组件vs.hooks</a></p><p><strong>二、解决类组件在代码复用性方面存在问题</strong></p><p>在类组件中，涉及状态的代码较难复用，无法将它们很优雅的拆分到不同文件中去。因此在实际开发中一个类组件的代码量都相对较大。</p><p>之前陆续出现过几个改善方案，如：</p><ul><li><code>mixins（混入）</code></li><li><code>HOC（高阶组件）</code>、</li><li><code>render-props（渲染属性）</code></li></ul><p>但它们还是有一些问题：</p><ul><li>mixins：存在数据来源不清晰、命名冲突等问题 --（已废弃）</li><li>HOC 和 render-props：写法复杂，且容易导致组件内形成 JSX 嵌套地狱问题（和函数嵌套地狱类似） --（目前仍使用）</li></ul><p><strong>总结</strong></p><p>正是由于 React 的类组件原先存在的问题，才有了 函数组件 + Hooks 的方案，来解决这些问题。</p><hr><h2 id="使用-hooks-前的说明" tabindex="-1"><a class="header-anchor" href="#使用-hooks-前的说明" aria-hidden="true">#</a> 使用 Hooks 前的说明</h2><p><strong>目标</strong>：能够理解在 react 开发中，什么场景下应该使用 Hooks</p><p><strong>只有当我们在用函数组件开发组件，并需要为函数组件添加状态时，使用 Hooks。</strong></p>',32),k=n("p",null,"要明确的一点是：",-1),d={href:"https://zh-hans.reactjs.org/docs/hooks-intro.html",target:"_blank",rel:"noopener noreferrer"},v=n("p",null,"所以对我们来说，类组件和函数组件都要掌握。",-1),m=s(`<p>Hooks 能和类组件代码在一个项目中共存，所以我们可以渐进式地使用 Hooks，而不是进行激进的大改造：</p><ul><li>不推荐将已有的类组件大规模重构成函数组件 + Hooks的形式，吃力不讨好！</li><li>推荐在编写一个新功能时开始使用 Hooks</li></ul><p>类组件和 “函数组件 + Hooks” 模式下的很多知识是相同的：</p><ul><li><strong>JSX：</strong><code>{}</code>、<code>onClick={handleClick}</code>、条件渲染、列表渲染、样式处理等</li><li><strong>组件通讯</strong></li><li><strong>开发理念：</strong><code>单向数据流</code>、<code>状态提升</code> 等</li><li><strong>解决问题的思路、技巧、常见错误的分析等</strong></li></ul><p><strong>总结</strong>：</p><ol><li>类组件和函数组件我们都要掌握，但后面以函数组件为主</li><li>在项目中能同时使用两种类组件和函数组件 + hooks，但不推荐，最好只用一种</li></ol><hr><h2 id="usestate-为函数组件创建状态" tabindex="-1"><a class="header-anchor" href="#usestate-为函数组件创建状态" aria-hidden="true">#</a> useState-为函数组件创建状态</h2><p><strong>目标</strong>：能够使用 <code>useState</code> 这个 Hook 函数，为函数组件提供状态</p><p>第一个 Hook 函数： <code>useState</code></p><ul><li>Hooks 函数具有一个显著的特点：就是函数名都以 <code>use</code> 开头。</li><li>使用场景：当你想要 <strong>为函数组件提供状态</strong> 时</li></ul><p>使用步骤：</p><ol><li>导入 <code>useState</code> 函数</li><li>调用 <code>useState</code> 函数，并传入状态初始值</li><li>从调用 <code>useState</code> 函数的返回值中，拿到状态、以及用来修改该状态的函数</li><li>在界面 JSX 中展示该状态</li><li>在点击等事件中，调用修改状态的函数来将状态更新为新的值</li></ol><p><strong>核心代码</strong>：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span> 

<span class="token keyword">const</span> <span class="token function-variable function">Count</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>  
  <span class="token comment">// 返回值是一个数组</span>
  <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
  
  <span class="token keyword">const</span> state <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>		  	<span class="token comment">// 第一个元素：状态值 -&gt; 0</span>
  <span class="token keyword">const</span> setState <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    	<span class="token comment">// 第二个元素：修改状态的函数</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
      <span class="token punctuation">{</span><span class="token comment">/* 展示状态值 */</span><span class="token punctuation">}</span>
      <span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span>useState Hook <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>state<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span>

      <span class="token punctuation">{</span><span class="token comment">/* 点击按钮，让当前状态值 +1 */</span><span class="token punctuation">}</span>
      <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setState</span><span class="token punctuation">(</span>state <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token operator">+</span><span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>useState</code> 的参数和返回值说明:</p><ul><li><p>参数：状态初始值。<code>useState</code> 创建的状态可以是任意类型的（比如数值、字符串等）</p></li><li><p>返回值：数组。它包含两个固定的值：1-状态、2-修改状态的函数</p></li></ul><hr><h2 id="usestate-用解构简化代码" tabindex="-1"><a class="header-anchor" href="#usestate-用解构简化代码" aria-hidden="true">#</a> useState-用解构简化代码</h2><p>**目标：**掌握数组的解构语法，并能用于 useState 的返回值</p><p>假如现在要获取一个数组中的元素，我们有两种方式可以操作</p><ol><li>常规方式：通过索引来访问</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;aaa&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;bbb&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> a <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>  <span class="token comment">// 获取索引为 0 的元素</span>
<span class="token keyword">const</span> b <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>  <span class="token comment">// 获取索引为 1 的元素</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>ES6方式：使用数组解构语法</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;aaa&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;bbb&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">]</span> <span class="token operator">=</span> arr

<span class="token comment">// 这相当于创建了两个变量，分别对应指定索引的数组元素</span>
<span class="token comment">// a =&gt; arr[0]</span>
<span class="token comment">// b =&gt; arr[1]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>核心代码</strong></p><p>使用数组解构语法来简化 <code>useState</code> 的使用</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 解构出来的名称可以是任意名称</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>state<span class="token punctuation">,</span> setState<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>age<span class="token punctuation">,</span> setAge<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>解构 <code>useState</code> 返回数组的一些约定：</p><ul><li>由于第一个元素是状态：所以用英文名词，比如：count、msg 等</li><li>由于第二个元素是修改状态的函数：所以要用动词，推荐以 <code>set+状态名</code> 形式，如：setCount、setMsg 等</li></ul></blockquote><hr><h2 id="usestate-读取和修改状态" tabindex="-1"><a class="header-anchor" href="#usestate-读取和修改状态" aria-hidden="true">#</a> useState-读取和修改状态</h2><p><strong>目标</strong>：能够在函数组件中正确的获取和修改状态</p><p><strong>读取状态</strong></p><p>在函数组件中用 <code>useState</code> 创建的状态，其实就是一个函数内的局部变量，所以它可在组件函数内的任意位置访问。</p><p><strong>修改状态</strong></p><ul><li><code>setXxx(newState)</code> 是个函数，参数为 <strong>新的状态值</strong></li><li>记住，一定要创建 <strong>新状态</strong> 来替换 <strong>旧状态</strong></li><li>通过 <code>setXxx</code> 修改状态后，组件函数会重新执行，进行界面的重新渲染</li></ul><p><strong>总结</strong>：</p><ol><li>修改状态时，一定要用新的状态替换旧的状态，不要直接修改旧的状态，<code>尤其是引用类型</code> 的状态</li></ol><hr><h2 id="usestate-函数组件的执行过程" tabindex="-1"><a class="header-anchor" href="#usestate-函数组件的执行过程" aria-hidden="true">#</a> useState-函数组件的执行过程</h2><p>**目标：**能够说出使用<code>useState</code>之后函数组件的执行过程（面试题）</p><p><strong>首次渲染：</strong></p><ol><li>从头开始执行组件函数</li><li>当遇到 <code>useState</code> 时，就创建状态</li><li>根据状态值渲染界面</li></ol><p><strong>后续渲染：</strong></p><ol><li>再次执行组件函数中所有的代码逻辑</li><li>当遇到 <code>useState</code> 时，不创建新状态，而是取之前已有的状态值</li><li>根据状态值渲染界面</li></ol><p><strong>总结：</strong></p><p>useState 并不是每次都创建新的状态</p><ul><li>第一次渲染才创建</li><li>后续是取之前的状态</li></ul><hr><h2 id="usestate-注意事项" tabindex="-1"><a class="header-anchor" href="#usestate-注意事项" aria-hidden="true">#</a> useState-注意事项</h2><p>**目标：**为函数组件创建多个状态</p><ul><li><p><code>useState</code> 可多次调用，创建出多个<strong>独立</strong>的新状态</p></li><li><p>不能在 <code>函数组件</code>和<code>自定义 Hooks 函数（还未学习到）</code> 之外的地方调用</p></li><li><p>不能在 含有<code>条件判断</code>、<code>循环遍历</code> 的代码块中调用（如 if、for、while 等）</p></li></ul><p>!---<a href="images/image-20220324092350317.png">image-20220324092350317</a></p><blockquote><p>【原因说明】</p><p>React Hooks 是按组件第一次渲染时的调用顺序来存储状态的。</p><p>然后在后续渲染中，会按创建时的固定顺序来操作状态。</p><p>所以一旦用了 if/for，就可能会导致顺序对应不上的情况发生。</p></blockquote><p>在 React 开发者工具中查看函数组件的状态和顺序：</p>`,55),g=s(`<blockquote><p>注意：以上规则同样适用于其他 React Hooks 函数</p></blockquote><hr><h2 id="useeffect-副作用介绍" tabindex="-1"><a class="header-anchor" href="#useeffect-副作用介绍" aria-hidden="true">#</a> useEffect-副作用介绍</h2><p>**目标：**能够说出什么是副作用</p><p>“副作用” 是相对 “主作用” 来说的：</p><ul><li>主作用：一件事物能完成的最重要的功能</li><li>副作用：除主作用外的其他功能</li></ul><blockquote><p>为防止混淆，也可以称它们为：主功能、副功能</p></blockquote><p>React 组件的主作用和副作用：</p><ul><li>主作用：根据数 state、props 数据进行界面渲染</li><li>副作用：除主作用外的其他功能都是副作用，如：<code>DOM操作</code>、<code>本地存储操作</code>、<code>发送网络请求</code></li></ul><p><strong>总结</strong></p><p>对于 React 组件而言，除了根据数据来渲染界面，其他操作都是 “副作用”。</p><hr><h2 id="useeffect-编写副作用代码" tabindex="-1"><a class="header-anchor" href="#useeffect-编写副作用代码" aria-hidden="true">#</a> useEffect-编写副作用代码</h2><p>**目标：**了解在函数组件中操作 DOM 的代码的正确写法</p><p>在实际开发中，副作用是必要的，很少有应用会不发请求、不做本地存储。</p><p>当你想在函数组件中编写这类属于副作用的代码时，就要用到 <code>useEffect</code> 这个 Hooks 函数。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>

<span class="token comment">// 具有副作用的代码，要用 useEffect Hook 函数来包裹</span>
<span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 副作用代码：设置当前网页再浏览器标题栏上显示的文字</span>
  document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">当前已点击 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>count<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> 次</span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>useEffect</code> 的第一个参数是一个回调函数，<strong>副作用代码应该写在该函数中</strong></p><p>该回调函数的执行时机是：</p><ul><li><p>组件每次渲染完成后，都会执行</p></li><li><p>相当于类组件中的生命周期钩子： <code>componentDidMount</code> + <code>componentDidUpdate</code></p></li></ul><hr><h2 id="useeffect-副作用的依赖项" tabindex="-1"><a class="header-anchor" href="#useeffect-副作用的依赖项" aria-hidden="true">#</a> useEffect-副作用的依赖项</h2><p>**目标：**让副作用代码只在指定状态变化时才执行</p><p><strong>当前代码的问题：</strong></p><p>当组件中含有多个状态，只要有其中一个状态发生变化，副作用函数就会被执行。 这有时会形成不必要的执行，造成资源浪费或产生逻辑上的 Bug。</p><p><strong>说明：</strong></p><p>默认情况下<code>useEffect</code> 的回调函数会在当前组件的任意 <code>状态/props</code> 发生变化时都会被执行。</p><p>优化方案：<strong>只让 某些状态 变化时，才执行对应的副作用函数</strong></p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">当前已点击 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>count<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> 次</span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>count<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这段代码的含义是：只当 <code>count</code> 状态发生改变时才重新执行副作用函数</p><p><code>useEffect</code> 的第二个参数是可选的：</p><ul><li><p>在不传的情况下，任意 <code>state 或 props</code> 的改变都会触发副作用的执行</p></li><li><p>如果传一个数组，则该数组中的元素会作为执行副作用的依赖项</p></li></ul><hr><h2 id="useeffect-当依赖项是个空数组" tabindex="-1"><a class="header-anchor" href="#useeffect-当依赖项是个空数组" aria-hidden="true">#</a> useEffect-当依赖项是个空数组</h2><p>**目标：**让副作用函数只在组件初次渲染后执行一次</p><p>将 <code>useEffect</code> 的第二个参数设为 <strong>空数组</strong>，即没有依赖项，则副作用函数只会在组件初次渲染后执行一次。</p><p>使用场景：</p><ol><li>在一进页面就发送请求获取数据时</li><li>在需要绑定全局对象上的事件时（如监听 window 对象上的某些事件）</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token function-variable function">handleResize</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  
  window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;resize&#39;</span><span class="token punctuation">,</span> handleResize<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>代码解释：</p><ul><li>该副作用函数只会在组件初次渲染之后执行，后续就不会再执行了</li><li>功能与类组件的 <code>componentDidMount</code> 生命周期钩子相同</li></ul><blockquote><p>【最佳实践说明】</p><p>useEffect 可以在组件函数内被多次调用。实际开发中推荐在一个 useEffect 里只编写一个功能，多个功能放到多个 useEffect 中处理。</p></blockquote><hr><h2 id="useeffect-总是正确设置依赖项" tabindex="-1"><a class="header-anchor" href="#useeffect-总是正确设置依赖项" aria-hidden="true">#</a> useEffect-总是正确设置依赖项</h2><p>**目标：**能够理解不正确设置依赖项会产生的后果</p><p>为防止潜在 Bug，我们要养成好习惯，必须做到：</p><blockquote><p>在 <code>useEffect</code> 回调函数中用到了哪些状态，就将这些状态设到依赖项数组中。</p></blockquote><p>有 Bug 的例子:</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>

  <span class="token function">useEffect</span><span class="token punctuation">(</span>
    <span class="token comment">// 副作用函数中用到了状态 count </span>
    <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">&#39;点击了&#39;</span> <span class="token operator">+</span> count <span class="token operator">+</span> <span class="token string">&#39;次&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> 
    <span class="token comment">// 但依赖项数组中未设置</span>
    <span class="token punctuation">[</span>count<span class="token punctuation">]</span>
  <span class="token punctuation">)</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">计数器：</span><span class="token punctuation">{</span>count<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setCount</span><span class="token punctuation">(</span>count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">+1</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>useEffect 完全指南：</p><p>https://overreacted.io/zh-hans/a-complete-guide-to-useeffect/</p></blockquote><hr><h2 id="useeffect-总结" tabindex="-1"><a class="header-anchor" href="#useeffect-总结" aria-hidden="true">#</a> useEffect-总结</h2><p>**目标：**能够说出 useEffect 的三种用法和它们的作用</p><ol><li><strong>不设置依赖项</strong> （全部依赖）</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>触发时机：每次组件渲染都会执行</li><li>功能类似：<code>componentDidMount</code> + <code>componentDidUpdate</code></li></ul><ol start="2"><li><strong>设置依赖项为空数组</strong> （没有依赖）</li></ol><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>触发时机：只在第一次渲染时执行</p></li><li><p>功能类似：<code>componentDidMount</code></p></li></ul><ol start="3"><li><strong>在依赖项数组中给出具体状态</strong> （指定依赖）</li></ol><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>count<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>触发时机：第一次渲染总会执行，然后只有当 count 状态变化时才再次执行</p></li><li><p>功能类似：<code>componentDidMount</code> + <code>componentDidUpdate</code> (执行判断)</p></li></ul><hr><h2 id="购物车案例" tabindex="-1"><a class="header-anchor" href="#购物车案例" aria-hidden="true">#</a> 购物车案例</h2><p>!---<a href="images/image-20201223110712000-16362089372116.png">image-20201223110712000</a></p><h3 id="基本实现步骤" tabindex="-1"><a class="header-anchor" href="#基本实现步骤" aria-hidden="true">#</a> 基本实现步骤</h3><ol><li>初始化项目结构</li><li>封装 MyHeader 组件 - 顶部栏</li><li>封装 MyFooter 组件 - 底部栏</li><li>商品列表的数据渲染</li><li>封装 MyGoods 组件 - 每个商品项</li><li>封装 MyCounter 组件 - 购买份数输入框</li></ol><hr><h3 id="项目初始化" tabindex="-1"><a class="header-anchor" href="#项目初始化" aria-hidden="true">#</a> 项目初始化</h3><ul><li>从素材中复制模板代码</li><li>安装 bootstrap： <code>yarn add bootstrap@4.5.0</code></li></ul><ul><li>安装 sass：<code>yarn add sass</code></li></ul><hr><h3 id="封装-myheader-组件" tabindex="-1"><a class="header-anchor" href="#封装-myheader-组件" aria-hidden="true">#</a> 封装 MyHeader 组件</h3><ul><li>新建组件<code>src/components/MyHeader/index.js</code></li></ul><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token string">&#39;./index.scss&#39;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">MyHeader</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>my-header<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      标题
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>新建样式文件<code>src/components/MyHeader/index.scss</code></li></ul><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token punctuation">.</span>my<span class="token operator">-</span>header <span class="token punctuation">{</span>
  z<span class="token operator">-</span>index<span class="token operator">:</span> <span class="token number">999</span><span class="token punctuation">;</span>
  <span class="token literal-property property">height</span><span class="token operator">:</span> 45px<span class="token punctuation">;</span>
  line<span class="token operator">-</span>height<span class="token operator">:</span> 45px<span class="token punctuation">;</span>
  text<span class="token operator">-</span>align<span class="token operator">:</span> center<span class="token punctuation">;</span>
  background<span class="token operator">-</span>color<span class="token operator">:</span> #1d7bff<span class="token punctuation">;</span>
  <span class="token literal-property property">color</span><span class="token operator">:</span> #fff<span class="token punctuation">;</span>
  <span class="token literal-property property">position</span><span class="token operator">:</span> fixed<span class="token punctuation">;</span>
  <span class="token literal-property property">top</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>App.js</code>使用组件</li></ul><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>
<span class="token keyword">import</span> MyHeader <span class="token keyword">from</span> <span class="token string">&#39;./components/MyHeader&#39;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">MyHeader</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">购物车</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">MyHeader</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="封装-myfooter-组件" tabindex="-1"><a class="header-anchor" href="#封装-myfooter-组件" aria-hidden="true">#</a> 封装 MyFooter 组件</h3><p>**目标：**能够封装购物车的 Footer 组件</p><p>!---<a href="images/image-20211021180953961-16362089372117.png">image-20211021180953961</a></p><p><strong>步骤</strong></p><ol><li>创建Footer组件</li><li>提供Footer样式</li><li>在App.js中渲染</li></ol><p><strong>核心代码：</strong></p><ul><li>创建Footer组件 <code>src/components/MyFooter.js</code></li></ul><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>
<span class="token keyword">import</span> <span class="token string">&#39;./index.scss&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">MyFooter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>my-footer<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>custom-control custom-checkbox<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>custom-control-input<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>footerCheck<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>custom-control-label<span class="token punctuation">&quot;</span></span> <span class="token attr-name">htmlFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>footerCheck<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
          全选
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">合计:</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>price<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">¥ 100</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>footer-btn btn btn-primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        结算 (0)
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>提供Footer样式<code>src/components/MyFooter.scss</code></li></ul><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token selector">.my-footer </span><span class="token punctuation">{</span>
  <span class="token property">z-index</span><span class="token punctuation">:</span> 999<span class="token punctuation">;</span>
  <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>
  <span class="token property">bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>
  <span class="token property">border-top</span><span class="token punctuation">:</span> 1px solid #ccc<span class="token punctuation">;</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
  <span class="token property">justify-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span>
  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> 0 10px<span class="token punctuation">;</span>
  <span class="token property">background</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>

  <span class="token selector">.price </span><span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
    <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token selector">.footer-btn </span><span class="token punctuation">{</span>
    <span class="token property">min-width</span><span class="token punctuation">:</span> 80px<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>
    <span class="token property">line-height</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>
    <span class="token property">border-radius</span><span class="token punctuation">:</span> 25px<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在<code>App.js</code>中渲染</li></ul><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>
<span class="token keyword">import</span> MyHeader <span class="token keyword">from</span> <span class="token string">&#39;./components/MyHeader&#39;</span>
<span class="token keyword">import</span> MyFooter <span class="token keyword">from</span> <span class="token string">&#39;./components/MyFooter&#39;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">MyHeader</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">购物车</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">MyHeader</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">

      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">MyFooter</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">MyFooter</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="封装-goodsitem-组件" tabindex="-1"><a class="header-anchor" href="#封装-goodsitem-组件" aria-hidden="true">#</a> 封装 GoodsItem 组件</h3><p>**目标：**能够封装GoodsItems组件</p><p><strong>核心代码</strong></p><ul><li>创建组件<code>src/components/GoodsItem/index.js</code></li></ul><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>
<span class="token keyword">import</span> <span class="token string">&#39;./index.scss&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">GoodsItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>my-goods-item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>left<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>custom-control custom-checkbox<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>custom-control-input<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>custom-control-label<span class="token punctuation">&quot;</span></span> <span class="token attr-name">htmlFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>
              <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://fuss10.elemecdn.com/e/5d/4a731a90594a4af544c0c25941171jpeg.jpeg<span class="token punctuation">&quot;</span></span>
              <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span>
            <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>right<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>top<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">商品名称</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bottom<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>price<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">¥ 商品价格</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">counter组件</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>准备样式</li></ul><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token selector">.my-goods-item </span><span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
  <span class="token property">border-bottom</span><span class="token punctuation">:</span> 1px solid #ccc<span class="token punctuation">;</span>
  <span class="token selector">.left </span><span class="token punctuation">{</span>
    <span class="token selector">img </span><span class="token punctuation">{</span>
      <span class="token property">width</span><span class="token punctuation">:</span> 120px<span class="token punctuation">;</span>
      <span class="token property">height</span><span class="token punctuation">:</span> 120px<span class="token punctuation">;</span>
      <span class="token property">margin-right</span><span class="token punctuation">:</span> 8px<span class="token punctuation">;</span>
      <span class="token property">border-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token selector">.custom-control-label::before,
    .custom-control-label::after </span><span class="token punctuation">{</span>
      <span class="token property">top</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token selector">.right </span><span class="token punctuation">{</span>
    <span class="token property">flex</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
    <span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span>
    <span class="token property">justify-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span>
    <span class="token selector">.bottom </span><span class="token punctuation">{</span>
      <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
      <span class="token property">justify-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span>
      <span class="token property">padding</span><span class="token punctuation">:</span> 5px 0<span class="token punctuation">;</span>
      <span class="token selector">.price </span><span class="token punctuation">{</span>
        <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
        <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>使用组件</li></ul><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>
<span class="token keyword">import</span> <span class="token string">&#39;./App.scss&#39;</span>
<span class="token keyword">import</span> MyHeader <span class="token keyword">from</span> <span class="token string">&#39;./components/MyHeader&#39;</span>
<span class="token keyword">import</span> MyFooter <span class="token keyword">from</span> <span class="token string">&#39;./components/MyFooter&#39;</span>
<span class="token keyword">import</span> GoodsItem <span class="token keyword">from</span> <span class="token string">&#39;./components/GoodsItem&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">MyHeader</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">购物车</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">MyHeader</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">GoodsItem</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">GoodsItem</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">MyFooter</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">MyFooter</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>新增样式 App.scss</li></ul><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token selector">.app </span><span class="token punctuation">{</span>
  <span class="token property">padding-top</span><span class="token punctuation">:</span> 45px<span class="token punctuation">;</span>
  <span class="token property">padding-bottom</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="商品列表渲染" tabindex="-1"><a class="header-anchor" href="#商品列表渲染" aria-hidden="true">#</a> 商品列表渲染</h3><p>**目标：**完成商品列表的数据渲染</p><p><strong>步骤：</strong></p><ol><li>app组件根据数据渲染商品列表</li><li>GoodsItem接收数据进行渲染</li></ol><p><strong>核心代码</strong></p><ul><li>提供数据</li></ul><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_name</span><span class="token operator">:</span>
      <span class="token string">&#39;班俏BANQIAO超火ins潮卫衣女士2020秋季新款韩版宽松慵懒风薄款外套带帽上衣&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_img</span><span class="token operator">:</span> <span class="token string">&#39;https://www.escook.cn/vuebase/pics/1.png&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_price</span><span class="token operator">:</span> <span class="token number">108</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_count</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_state</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_name</span><span class="token operator">:</span>
      <span class="token string">&#39;嘉叶希连帽卫衣女春秋薄款2020新款宽松bf韩版字母印花中长款外套ins潮&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_img</span><span class="token operator">:</span> <span class="token string">&#39;https://www.escook.cn/vuebase/pics/2.png&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_price</span><span class="token operator">:</span> <span class="token number">129</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_count</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_state</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_name</span><span class="token operator">:</span>
      <span class="token string">&#39;思蜜怡2020休闲运动套装女春秋季新款时尚大码宽松长袖卫衣两件套&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_img</span><span class="token operator">:</span> <span class="token string">&#39;https://www.escook.cn/vuebase/pics/3.png&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_price</span><span class="token operator">:</span> <span class="token number">198</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_count</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_state</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_name</span><span class="token operator">:</span>
      <span class="token string">&#39;思蜜怡卫衣女加绒加厚2020秋冬装新款韩版宽松上衣连帽中长款外套&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_img</span><span class="token operator">:</span> <span class="token string">&#39;https://www.escook.cn/vuebase/pics/4.png&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_price</span><span class="token operator">:</span> <span class="token number">99</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_count</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_state</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_name</span><span class="token operator">:</span>
      <span class="token string">&#39;幂凝早秋季卫衣女春秋装韩版宽松中长款假两件上衣薄款ins盐系外套潮&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_img</span><span class="token operator">:</span> <span class="token string">&#39;https://www.escook.cn/vuebase/pics/5.png&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_price</span><span class="token operator">:</span> <span class="token number">156</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_count</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_state</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_name</span><span class="token operator">:</span> <span class="token string">&#39;ME&amp;CITY女装冬季新款针织抽绳休闲连帽卫衣女&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_img</span><span class="token operator">:</span> <span class="token string">&#39;https://www.escook.cn/vuebase/pics/6.png&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_price</span><span class="token operator">:</span> <span class="token number">142.8</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_count</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_state</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">7</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_name</span><span class="token operator">:</span>
      <span class="token string">&#39;幂凝假两件女士卫衣秋冬女装2020年新款韩版宽松春秋季薄款ins潮外套&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_img</span><span class="token operator">:</span> <span class="token string">&#39;https://www.escook.cn/vuebase/pics/7.png&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_price</span><span class="token operator">:</span> <span class="token number">219</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_count</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_state</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_name</span><span class="token operator">:</span>
      <span class="token string">&#39;依魅人2020休闲运动衣套装女秋季新款秋季韩版宽松卫衣 时尚两件套&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_img</span><span class="token operator">:</span> <span class="token string">&#39;https://www.escook.cn/vuebase/pics/8.png&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_price</span><span class="token operator">:</span> <span class="token number">178</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_count</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_state</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">9</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_name</span><span class="token operator">:</span>
      <span class="token string">&#39;芷臻(zhizhen)加厚卫衣2020春秋季女长袖韩版宽松短款加绒春秋装连帽开衫外套冬&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_img</span><span class="token operator">:</span> <span class="token string">&#39;https://www.escook.cn/vuebase/pics/9.png&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_price</span><span class="token operator">:</span> <span class="token number">128</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_count</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_state</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_name</span><span class="token operator">:</span>
      <span class="token string">&#39;Semir森马卫衣女冬装2019新款可爱甜美大撞色小清新连帽薄绒女士套头衫&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_img</span><span class="token operator">:</span> <span class="token string">&#39;https://www.escook.cn/vuebase/pics/10.png&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_price</span><span class="token operator">:</span> <span class="token number">153</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_count</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_state</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>

<span class="token keyword">const</span> <span class="token punctuation">[</span>list<span class="token punctuation">,</span> setList<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>app.js 渲染组件</li></ul><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token punctuation">{</span>list<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">GoodsItem</span></span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>id<span class="token punctuation">}</span></span> <span class="token spread"><span class="token punctuation">{</span> <span class="token operator">...</span>item <span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">GoodsItem</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>goodsItem渲染数据</li></ul><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>
<span class="token keyword">import</span> <span class="token string">&#39;./index.scss&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">GoodsItem</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>
  goods_count<span class="token punctuation">,</span>
  goods_img<span class="token punctuation">,</span>
  goods_name<span class="token punctuation">,</span>
  goods_price<span class="token punctuation">,</span>
  goods_state<span class="token punctuation">,</span>
  id<span class="token punctuation">,</span>
<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>my-goods-item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>left<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>custom-control custom-checkbox<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>
            <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>custom-control-input<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>goods_state<span class="token punctuation">}</span></span>
            <span class="token attr-name">id</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>id<span class="token punctuation">}</span></span>
          <span class="token punctuation">/&gt;</span></span><span class="token punctuation">{</span>id<span class="token punctuation">}</span><span class="token plain-text">
          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>custom-control-label<span class="token punctuation">&quot;</span></span> <span class="token attr-name">htmlFor</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>id<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>goods_img<span class="token punctuation">}</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>right<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>top<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>goods_name<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bottom<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>price<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">¥ </span><span class="token punctuation">{</span>goods_price<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">counter组件</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="商品选中功能" tabindex="-1"><a class="header-anchor" href="#商品选中功能" aria-hidden="true">#</a> 商品选中功能</h3><p>**目标：**完成商品的选中切换功能</p><p><strong>步骤：</strong></p><ol><li>注册onChange事件</li><li>子传父修改状态</li></ol><p><strong>核心代码</strong></p><ul><li>子组件</li></ul><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>
  <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>custom-control-input<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>goods_state<span class="token punctuation">}</span></span>
  <span class="token attr-name">id</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>id<span class="token punctuation">}</span></span>
  <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">changeState</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">}</span></span>
<span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>父组件</li></ul><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">const</span> <span class="token function-variable function">changeState</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setList</span><span class="token punctuation">(</span>
    list<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>id <span class="token operator">===</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
          <span class="token operator">...</span>item<span class="token punctuation">,</span>
          <span class="token literal-property property">goods_state</span><span class="token operator">:</span> <span class="token operator">!</span>item<span class="token punctuation">.</span>goods_state<span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> item
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token punctuation">{</span>list<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">GoodsItem</span></span>
    <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>id<span class="token punctuation">}</span></span>
    <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>item<span class="token punctuation">}</span></span>
    <span class="token attr-name">changeState</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>changeState<span class="token punctuation">}</span></span>
  <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">GoodsItem</span></span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="商品全选功能" tabindex="-1"><a class="header-anchor" href="#商品全选功能" aria-hidden="true">#</a> 商品全选功能</h3><p><strong>目标：完成商品全选切换功能</strong></p><p><strong>核心代码：</strong></p><ul><li>子组件</li></ul><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>
  <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>custom-control-input<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>footerCheck<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>isCheckAll<span class="token punctuation">}</span></span>
  <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">checkAll</span><span class="token punctuation">(</span><span class="token operator">!</span>isCheckAll<span class="token punctuation">)</span><span class="token punctuation">}</span></span>
<span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>父组件</li></ul><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">const</span> <span class="token function-variable function">checkAll</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setList</span><span class="token punctuation">(</span>
    list<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token operator">...</span>item<span class="token punctuation">,</span>
        <span class="token literal-property property">goods_state</span><span class="token operator">:</span> value<span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="商品数量与价格的显示" tabindex="-1"><a class="header-anchor" href="#商品数量与价格的显示" aria-hidden="true">#</a> 商品数量与价格的显示</h3><p><strong>步骤：</strong></p><ol><li>父组件把list传递给子组件</li></ol><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">MyFooter</span></span> <span class="token attr-name">list</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>list<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">MyFooter</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>子组件计算总数量和总价钱</li></ol><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">const</span> totalCount <span class="token operator">=</span> list
  <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span>goods_state<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">prev<span class="token punctuation">,</span> item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> prev <span class="token operator">+</span> item<span class="token punctuation">.</span>goods_count<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> totalPrice <span class="token operator">=</span> list
  <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span>goods_state<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">prev<span class="token punctuation">,</span> item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> prev <span class="token operator">+</span> item<span class="token punctuation">.</span>goods_price <span class="token operator">*</span> item<span class="token punctuation">.</span>goods_count<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="数据持久化" tabindex="-1"><a class="header-anchor" href="#数据持久化" aria-hidden="true">#</a> 数据持久化</h3><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 存储到本地</span>
  localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&#39;list&#39;</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>list<span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment">// 获取</span>
<span class="token keyword">const</span> init <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;list&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span> arr
<span class="token keyword">const</span> <span class="token punctuation">[</span>list<span class="token punctuation">,</span> setList<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>init<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,144);function b(y,h){const t=e("ExternalLinkIcon");return o(),c("div",null,[r,n("blockquote",null,[k,n("p",null,[n("a",d,[a("React 官方并没有移除类组件的计划"),l(t)]),a("，这两种组件的写法会长期共存。")]),v]),m,i(' <img src="images/image-20220324091922248.png" alt="image-20220324091922248" style="zoom:50%;" /> '),g])}const f=p(u,[["render",b],["__file","07-ReactHooks基础.html.vue"]]);export{f as default};
