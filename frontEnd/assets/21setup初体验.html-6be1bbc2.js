import{_ as n,p as s,q as a,a1 as e}from"./framework-96b046e1.js";const p={},t=e(`<h1 id="_21-setup初体验" tabindex="-1"><a class="header-anchor" href="#_21-setup初体验" aria-hidden="true">#</a> 21 setup初体验</h1><p>组合式 api 初体验</p><p>让逻辑相关的代码聚集在一块</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment">// 取代了 beforeCreate 和 created</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 变量非响应式（使用ref）</span>
<span class="token keyword">const</span> counter <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
counter<span class="token punctuation">.</span>value <span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token comment">// {{ counter }}</span>

<span class="token comment">// 引用类型 响应式</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;zs&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 使用return 暴露变量和方法</span>
<span class="token keyword">return</span> <span class="token punctuation">{</span> counter <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 解构系统</span>
<span class="token punctuation">{</span> msg <span class="token punctuation">}</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token literal-property property">msg</span><span class="token operator">:</span> msg <span class="token punctuation">}</span>
<span class="token punctuation">{</span> <span class="token operator">...</span>obj <span class="token punctuation">}</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span>obj<span class="token punctuation">.</span>name <span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span>obj<span class="token punctuation">.</span>age <span class="token punctuation">}</span> 

缺点 <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token operator">...</span>obj<span class="token punctuation">}</span> 没有响应式（解构）

<span class="token comment">// 解决 toRefs 使结构后的数据重新获得响应式</span>
<span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">toRefs</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">}</span>
<span class="token comment">// 亦可</span>
<span class="token keyword">let</span> <span class="token punctuation">{</span>name<span class="token punctuation">,</span> age<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">toRefs</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 注意点</span>
<span class="token keyword">let</span> person <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;xxx&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">function</span> <span class="token function">change</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    person <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment">// 不生效</span>
    person <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 也不生效</span>
    person<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;xxx&#39;</span> <span class="token comment">// ok</span>
<span class="token punctuation">}</span>
<span class="token comment">// 结论：不能修改对象的引用</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),o=[t];function c(l,i){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","21setup初体验.html.vue"]]);export{r as default};
