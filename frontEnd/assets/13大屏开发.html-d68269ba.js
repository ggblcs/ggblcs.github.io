import{_ as t,M as o,p,q as l,R as n,t as a,N as e,a1 as c}from"./framework-96b046e1.js";const i={},r=c(`<h1 id="_13-大屏开发" tabindex="-1"><a class="header-anchor" href="#_13-大屏开发" aria-hidden="true">#</a> 13 大屏开发</h1><h2 id="适配不同屏幕大小" tabindex="-1"><a class="header-anchor" href="#适配不同屏幕大小" aria-hidden="true">#</a> 适配不同屏幕大小</h2><p><strong>查阅资料</strong> 如何适配不同屏幕大小？ vh，vw，rem，宽高百分比，媒体查询，scale/zoom等。都是可选方案。 比如，想让div横向铺满屏幕，就用100vw，或者100%。 或者用@media 媒体查询。根据不同屏幕，给容器或者item 设置不同的样式。 但是有没有发现，这些方案最大的问题，就是每个item可能要定不同的宽度or高度。这样工作量直接翻倍。 调研发现有些成熟大屏商，是将整个大屏内容，等比例的适应到屏幕展示区的。效果如下：</p><p>作者：华山令狐冲 链接：https://juejin.cn/post/7128330153012248584 来源：稀土掘金 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- 大部分，比如数字冰雹，dataV案例，都是通过scale缩放实现的，核心代码如下 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>gis-container<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">:style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{
    transform: &#39;translateX(-50%) translateY(-50%) translateZ(0) scale(&#39; + scale + &#39;)&#39;
    }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">setScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> visibleWidth <span class="token operator">=</span> window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">;</span>
    <span class="token keyword">let</span> visibleHeight <span class="token operator">=</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">;</span>
    <span class="token keyword">var</span> widthPercentage <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1.0</span> <span class="token operator">*</span> visibleWidth<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">5760</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> heightPercentage <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1.0</span> <span class="token operator">*</span> visibleHeight<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1440</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>scale <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>widthPercentage<span class="token punctuation">,</span> heightPercentage<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>方式一</strong></p>`,7),u={href:"http://datav.jiaminghi.com/guide/",target:"_blank",rel:"noopener noreferrer"},d=n("p",null,[n("strong",null,"方式二")],-1),h=n("p",null,"大佬写的修改开源的，适配vue3版本",-1),k={href:"https://datav-vue3.netlify.app/Guide/Guide.html",target:"_blank",rel:"noopener noreferrer"},v=n("strong",null,"方式三",-1),_={href:"https://blog.csdn.net/AdminGuan/article/details/127971358",target:"_blank",rel:"noopener noreferrer"},m=n("h2",{id:"图表",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#图表","aria-hidden":"true"},"#"),a(" 图表")],-1),g={href:"http://g2-v3.antv.vision/zh/docs/api/animate",target:"_blank",rel:"noopener noreferrer"},b=n("p",null,"说是配置有点多，用下面的",-1),f={href:"https://g2plot.antv.antgroup.com/",target:"_blank",rel:"noopener noreferrer"},x=n("p",null,[n("strong",null,"因为好多配置文档上没写，所以只能换回了echarts")],-1),w=n("h2",{id:"数字动效",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#数字动效","aria-hidden":"true"},"#"),a(" 数字动效")],-1),V=n("p",null,"数字翻牌器，datav上有，但没用这个库，",-1),j={href:"http://inorganik.github.io/countUp.js/",target:"_blank",rel:"noopener noreferrer"},q={href:"https://blog.csdn.net/qq_37916164/article/details/120489635",target:"_blank",rel:"noopener noreferrer"},y=n("h2",{id:"视频",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#视频","aria-hidden":"true"},"#"),a(" 视频")],-1),G=n("p",null,"flv.js",-1),N=n("p",null,"artplayer.js",-1);function P(B,E){const s=o("ExternalLinkIcon");return p(),l("div",null,[r,n("p",null,[n("a",u,[a("dataV vue2版本"),e(s)]),a("，由于用的vue3，二dataV vue3版本还在开发中，不考虑。")]),d,h,n("p",null,[n("a",k,[a("DataV Vue3+TS+Vite版 | DataV - Vue3"),e(s)])]),n("p",null,[v,n("a",_,[a("vue3-scale-box"),e(s)])]),m,n("p",null,[n("a",g,[a("G2"),e(s)])]),b,n("p",null,[n("a",f,[a("G2 plot"),e(s)])]),x,w,V,n("p",null,[n("a",j,[a("countUp"),e(s)])]),n("p",null,[n("a",q,[a("vue3-count-to"),e(s)])]),y,G,N])}const S=t(i,[["render",P],["__file","13大屏开发.html.vue"]]);export{S as default};
