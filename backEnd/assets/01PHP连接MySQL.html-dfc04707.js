import{_ as e,p as a,q as s,a1 as t}from"./framework-96b046e1.js";const r={},c=t(`<h1 id="_01-php连接mysql" tabindex="-1"><a class="header-anchor" href="#_01-php连接mysql" aria-hidden="true">#</a> 01 PHP连接MySQL</h1><h2 id="_1-编码错误" tabindex="-1"><a class="header-anchor" href="#_1-编码错误" aria-hidden="true">#</a> 1 编码错误</h2><p>两步操作后第二步解决了问题，但第一步不知道有没有用。</p><p>操作1：</p><p>如果连接8.0以上版本的MySQL会有一个serve charset之类的错误，当然原文不是这么写的，你能看懂大致说的就是不认识什么服务发送编码。</p><p>这个时候参看之前的MySQL笔记如下修改编码。<strong>结果并没有用</strong>，但我也没改过来。</p><p>表中的值插入中文会报错？因为如果客户端用的是gbk编码，服务器用编译utf8的方式接收，并用编译utf8的方式发送，肯定会报错。</p><p>怎样查看服务器是按什么字符集编译的？答：进入MySQL使用<code>show variables like &#39;character_set_%&#39;;</code>命令即可查看。默认情况下，会出现下面一大坨。</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>+--------------------------+---------------------------------------------------------+
| Variable_name            | Value                                                   |
+--------------------------+---------------------------------------------------------+
| character_set_client     | utf8mb4                                                 |
| character_set_connection | utf8mb4                                                 |
| character_set_database   | utf8                                                    |
| character_set_filesystem | binary                                                  |
| character_set_results    | utf8mb4                                                 |
| character_set_server     | utf8mb4                                                 |
| character_set_system     | utf8                                                    |
| character_sets_dir       | C:\\Program Files\\MySQL\\MySQL Server 8.0\\share\\charsets\\ |
+--------------------------+---------------------------------------------------------+
8 rows in set, 1 warning (0.02 sec)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中，第4行<code>character_set_client</code>（即服务器接收方式）是 <code>utf8</code>，第8行 <code>character_set_results</code> （即服务器发送方式）是 <code>utf8</code> ，如果你的客户端是gbk编码，客户端是不能改的，只能改服务器。就需要两条命令 <code>set character_set_client =gbk </code>和<code>set character_set_results =gbk </code>改这两处即可，其他不用管。</p><p>总结：客户端编码、<code>character_set_client</code>、 <code>character_set_results</code> 三者的值相同即可插入中文不报错不乱码。<strong>仅需一句</strong> <code>set names 字符编码</code>就可以轻松设定<code>character_set_client</code>、 <code>character_set_results</code>的值，取代上述繁琐的两条命令。</p><p>操作二：</p><p>找到c盘ProgramData目录下MySQL目录下的my.ini，直接全局搜锁charset，发现有两条被注释掉了的语句，就是设置编码的，而且等号后面也没有内容，直接取消注释，设置内容为utf8。重启电脑（目的是重启数据库），问题解决。</p><h2 id="_2-密码问题" tabindex="-1"><a class="header-anchor" href="#_2-密码问题" aria-hidden="true">#</a> 2 密码问题</h2><p>The server requested authentication method unknown to the client</p><p>这个也是MySQL8.0以上版本才有的问题。</p><p>还是两步操作，第二部才解决的。</p><p>操作一：</p><p>输入密码进入MySQL后输入以下指令</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>use mysql;
alter user root@localhost identified with mysql_native_password by &#39;root&#39;;
flush privileges;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code> by &#39;root&#39;;</code>中的root是密码，写自己的。<code>root@localhost</code>中的root是应该是用户名。</p><p>操作一并没有解决问题。</p><p>操作二：</p><p>修改my.ini文件中如下，修改第一句为第二句，问题解决。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># default_authentication_plugin=caching_sha2_password
default_authentication_plugin=mysql_native_password
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,25),i=[c];function n(d,l){return a(),s("div",null,i)}const u=e(r,[["render",n],["__file","01PHP连接MySQL.html.vue"]]);export{u as default};
