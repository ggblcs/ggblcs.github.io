import{_ as e,p as a,q as o,a1 as t}from"./framework-96b046e1.js";const i={},c=t('<h1 id="_009-指针" tabindex="-1"><a class="header-anchor" href="#_009-指针" aria-hidden="true">#</a> 009 指针</h1><h2 id="_01-基础" tabindex="-1"><a class="header-anchor" href="#_01-基础" aria-hidden="true">#</a> 01 基础</h2><ol><li>声明：<code>int * p;</code></li><li>定义：<code>p = &amp;a;</code></li><li>使用：<code>*p = 5;</code>，通过<strong>解引用</strong>的方式来找到指针指向的内存。</li><li>占用的内存空间：32位操作系统占用4字节，64位操作系统占用8字节。与数据类型int float没有关系。</li></ol><h2 id="_02-空指针" tabindex="-1"><a class="header-anchor" href="#_02-空指针" aria-hidden="true">#</a> 02 空指针</h2><p>空指针：指针变量指向内存中编号为0的空间。</p><p>用法：初始换指针变量</p><p>注意：空指针指向的内存是 <strong>不可以访问</strong>的（属系统空间），编译不报错，运行报错。</p><p><code>int * p = NULL;</code></p><h2 id="_03-野指针" tabindex="-1"><a class="header-anchor" href="#_03-野指针" aria-hidden="true">#</a> 03 野指针</h2><p>野指针：指针变量指向非法的内存空间。</p><p><code>int * p = (int *) 0x1100;</code> 随便搞内存赋值，也是编译不出错，但是运行报错。</p><h2 id="_04-const修饰指针" tabindex="-1"><a class="header-anchor" href="#_04-const修饰指针" aria-hidden="true">#</a> 04 const修饰指针</h2><ol><li>const修饰指针，叫常量指针。<code>const int * p = &amp;a;</code></li><li>const修饰常量，叫指针常量。<code>int * const p = &amp;a;</code></li><li>const既修饰指针，又修饰常量。</li></ol><p>常量指针：常量的指针，指针指向可以改，指针指向的值不可以改。</p><p>指针常量：指针是常量，指针指向不可以修改，指针指向的值可以改。</p>',15),n=[c];function d(r,s){return a(),o("div",null,n)}const l=e(i,[["render",d],["__file","009指针.html.vue"]]);export{l as default};
