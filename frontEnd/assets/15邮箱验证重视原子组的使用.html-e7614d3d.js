import{_ as n,p as s,q as a,a1 as e}from"./framework-96b046e1.js";const c={},t=e(`<h1 id="_15-邮箱验证重视原子组的使用" tabindex="-1"><a class="header-anchor" href="#_15-邮箱验证重视原子组的使用" aria-hidden="true">#</a> 15 邮箱验证重视原子组的使用</h1><p>只是举个例子说明原子组的使用，并不一定真的能验证邮箱！</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> email_1 <span class="token operator">=</span> <span class="token string">&quot;26254021@qq.com&quot;</span>
<span class="token keyword">let</span> email_2 <span class="token operator">=</span> <span class="token string">&quot;36254021@qq.com.cn&quot;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>email_1<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[\\w-]+@[\\w]+\\.(com|cn|org|cc)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 可以匹配成功</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>email_2<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[\\w-]+@[\\w]+\\.(com|cn|org|cc)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 匹配失败，.cn没有匹配上</span>
<span class="token comment">// 此时可以用原子组，让邮箱@后面的 [\\w-]+\\. 可以有一个或多个</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>email_2<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[\\w-]+@([\\w]+\\.)+(com|cn|org|cc)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 匹配成功</span>

<span class="token comment">// (com|cn|org)是指 com或cn或org，括号不能去</span>
<span class="token comment">// 如果把括号去掉就成了 ^[\\w-]+@([\\w]+\\.)+com 这个整体或者 cn 或者org</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),o=[t];function p(l,i){return s(),a("div",null,o)}const r=n(c,[["render",p],["__file","15邮箱验证重视原子组的使用.html.vue"]]);export{r as default};
