import{_ as e,p as i,q as l,a1 as o}from"./framework-96b046e1.js";const d={},a=o('<h1 id="_07-标识符与注释" tabindex="-1"><a class="header-anchor" href="#_07-标识符与注释" aria-hidden="true">#</a> 07 标识符与注释</h1><h2 id="_01-标识符-命名" tabindex="-1"><a class="header-anchor" href="#_01-标识符-命名" aria-hidden="true">#</a> 01 标识符(命名)</h2><ol><li><p>26个英文字母大小写，10个阿拉伯数字，下划线，美元符号$</p></li><li><p>不能的数字开头</p></li><li><p>见名知义</p></li><li><p>驼峰命名（首字母小鸟，第二个单词首字母大写）</p></li><li><p>面试中命名，“哈哈_text”也是合法的，理论讲utf-8中字符合法，所以汉字合法，但不要这样用。</p></li><li><p><strong>在前端开发中如果id名称是由多个单词组成的, 那么建议使用下划线来连接</strong></p></li><li><p><strong>在前端开发中如果class名称是由多个单词组成的, 那么建议使用中划线来连接</strong></p></li><li><p><strong>如果在方法名称前面加上_, 代表告诉其他的程序员这个是一个私有的方法, 不要调用</strong> 注意点: 仅仅是告诉别人这个是一个私有的方法, 并不是真正的是一个私有的方法</p></li></ol><h2 id="_02-注释" tabindex="-1"><a class="header-anchor" href="#_02-注释" aria-hidden="true">#</a> 02 注释</h2><ol><li>单行注释： <code>//</code></li><li>多行注释： <code>/*注释*/</code></li><li>区域注释 以<code>//#region 区域描述</code>开始，以<code>//#endregion</code>结束。主要是折叠代码，告诉别人这块代码是干嘛的，而不是注释代码，</li><li>嵌套规则</li><li>单行注释嵌套单行注释，例 <code>//注释//注释</code></li><li>单行注释嵌套多行注释：例 <code>//注释/*注释*/</code></li><li>多行注释嵌套单行注释：例 <code> /*注释//注释*/</code></li><li>多行注释不能嵌套多行注释。</li></ol>',5),c=[a];function r(t,n){return i(),l("div",null,c)}const s=e(d,[["render",r],["__file","07标识符与注释.html.vue"]]);export{s as default};
