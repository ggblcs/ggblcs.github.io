import{_ as t,M as i,p as o,q as p,R as n,t as s,N as e,a1 as c}from"./framework-96b046e1.js";const l="/assets/meta标签设置视口-4b271de1.jpg",r="/assets/视口-518f876c.jpg",d="/assets/视觉视口-4ce32dfc.jpg",u="/assets/理想视口-2c6f9b44.jpg",m="/assets/布局视口-377a3308.jpg",v={},k=c(`<h1 id="_17-视口宽度总结" tabindex="-1"><a class="header-anchor" href="#_17-视口宽度总结" aria-hidden="true">#</a> 17 视口宽度总结</h1><p>如果都理解了，可以直接看04</p><h2 id="_01-1px问题" tabindex="-1"><a class="header-anchor" href="#_01-1px问题" aria-hidden="true">#</a> 01 1px问题</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 设置视口与手机物理像素相匹配</span>
<span class="token keyword">let</span> scale <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> window<span class="token punctuation">.</span>devicePixelRatio<span class="token punctuation">;</span>
<span class="token keyword">let</span> text <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>scale<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, maximum-scale=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>scale<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, minimum-scale=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>scale<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, user-scalable=no&quot;&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>以相框和相片内容类比，viewport就是相片内容。值为2(200%)就会拉伸相片内容，值为0.5(50%)就会缩放相片内容。</p></blockquote><blockquote><p>相框就是视觉视口（浏览器可视区域），大小是不变的。</p></blockquote><blockquote><p>相片内容就是布局视口（网页内容区域），大小可变。</p></blockquote><blockquote><p>作用： 这三行代码就是解决1px逻辑像素与物理像素不匹配问题的。</p><p>注意点：单位是rem的话，显示的大小是不会有变化的。03 会解释</p><p>注意点：只有在单位为px时，才能体会到这三行代码的作用。</p></blockquote><blockquote><p>原理(自我)：</p><p><code>1 / window.devicePixelRatio</code>获取的是css逻辑像素（小）与物理像素（大）的比值。是一个小数。</p></blockquote><blockquote><p>​ <code>initial-scale</code>是视口等比缩放的意思。等比缩放一个小数，布局视口内容缩放，这样就让1物理像素匹配上了1逻辑像素。</p></blockquote><h2 id="_02-rem跨终端" tabindex="-1"><a class="header-anchor" href="#_02-rem跨终端" aria-hidden="true">#</a> 02 rem跨终端</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 设置字体大小</span>
document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>style<span class="token punctuation">.</span>fontSize <span class="token operator">=</span> window<span class="token punctuation">.</span>innerWidth <span class="token operator">/</span> <span class="token number">7.5</span> <span class="token operator">+</span> <span class="token string">&quot;px&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>作用： 这句代码的意义就在于让含有rem单位的东西（比如字体大小）能够按照在</p><p>公式：设计图字体大小 /（设计图大小 / 7.5份=100）* 上面根字体大小。</p><p>总结：也就是让拿着750宽设计图上的字体，等比显示在设备上。</p></blockquote><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>公式解析(长公式，请左右滑动)

设备大小(window.innerwidth)   	设备字体(目标：写为16)
---------------------------  = --------------------- = 固定比例
     设计图大小(750px)           设计图字体(16px)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>设备大小(window.innerwidth)   	      设备字体(目标：写为16)
--------------------------- * 100  = --------------------- * 100 = 新固定比例(根字体大小)
     设计图大小(750px)                 设计图字体(16px)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>设备字体 &lt;==&gt; [设计图字体(16px) / 100] rem * 新固定比例(根字体大小)

&lt;==&gt;是等价符号
只有将单位设置为rem，系统才自动帮你乘根字体大小，
例如weidth: 22/100 rem
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>公式解析

UI字体大小（写入值）   *   窗口宽度
--------------------------------    =  窗口字体大小（也是待求字体大小，电脑自动计算的值）
					   UI图宽750
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_03-为什么1rem宽度不变" tabindex="-1"><a class="header-anchor" href="#_03-为什么1rem宽度不变" aria-hidden="true">#</a> 03 为什么1rem宽度不变</h2><blockquote><p>同时设置以上两个01 02为什么1rem的大小不变呢？</p></blockquote><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>原因是：先设置等比缩放，解决1px问题。这就使视口宽度发生改变。从而导致跨终端的代码window.innerWidth发生改变
	进一步导致了
	document.documentElement.style.fontSize = window.innerWidth / 7.5 + &quot;px&quot;;
	这个设置根字体大小的值也发生改变。
	相当于解决1px问题之前，是让设计图上的元素等比显示在逻辑像素尺寸大小宽度的屏幕上。
		 解决1px问题之后，是上设计图上的元素等比显示在物理像素尺寸大小宽度的屏幕上。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>举个例子：</p><p>解决1px问题之前，<code>window.innerWidth</code>宽度是320。那么根字体大小就是320/7.5=42.6。</p><p>解决1px问题之后，<code>window.innerWidth</code>宽度自动变成是640。那么根字体大小就是640/7.5=85.3</p><p>也就是显示的字体大小相对于屏幕的比例并没有发生改变。</p><h2 id="_04-代码顺序" tabindex="-1"><a class="header-anchor" href="#_04-代码顺序" aria-hidden="true">#</a> 04 代码顺序</h2><p>这个解决方法确实是有步骤顺序的。</p><p>务必先01 解决1px问题，再02 解决rem跨终端问题。</p><p>只有先解决1px问题才能让<code>window.innerWidth</code>获取到真正的当前视口宽度。</p><p>可以直接拷贝：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 设置视口与手机物理像素相匹配</span>
<span class="token keyword">let</span> scale <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> window<span class="token punctuation">.</span>devicePixelRatio<span class="token punctuation">;</span>
<span class="token keyword">let</span> text <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>scale<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, maximum-scale=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>scale<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, minimum-scale=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>scale<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, user-scalable=no&quot;&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 设置字体大小</span>
document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>style<span class="token punctuation">.</span>fontSize <span class="token operator">=</span> window<span class="token punctuation">.</span>innerWidth <span class="token operator">/</span> <span class="token number">7.5</span> <span class="token operator">+</span> <span class="token string">&quot;px&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_05-视口" tabindex="-1"><a class="header-anchor" href="#_05-视口" aria-hidden="true">#</a> 05 视口</h2><p><img src="`+l+'" alt="meta标签设置视口"></p><p><img src="'+r+'" alt="视口"></p><p><img src="'+d+'" alt="视觉视口"></p><img src="'+u+'" alt="理想视口"><p><img src="'+m+'" alt="布局视口"></p><p>关于视口的资料：</p>',37),b={href:"https://www.cnblogs.com/malong1992/articles/11636176.html",target:"_blank",rel:"noopener noreferrer"},h={href:"https://www.cnblogs.com/shytong/p/5252358.html",target:"_blank",rel:"noopener noreferrer"},g={href:"https://www.cnblogs.com/mcat/p/5344076.html",target:"_blank",rel:"noopener noreferrer"};function x(_,w){const a=i("ExternalLinkIcon");return o(),p("div",null,[k,n("p",null,[n("a",b,[s("前端开发-视口 - 前端那点事 - 博客园 (cnblogs.com)"),e(a)])]),n("p",null,[n("a",h,[s("视口（viewport）原理详解之第一部分 - 很好玩 - 博客园 (cnblogs.com)"),e(a)])]),n("p",null,[n("a",g,[s("说说移动前端中 viewport （视口） - 小数 - 博客园 (cnblogs.com)"),e(a)])])])}const f=t(v,[["render",x],["__file","17视口宽度总结.html.vue"]]);export{f as default};
