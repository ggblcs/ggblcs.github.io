import{_ as n,p as s,q as a,a1 as e}from"./framework-96b046e1.js";const t={},p=e(`<h1 id="_25-notfound" tabindex="-1"><a class="header-anchor" href="#_25-notfound" aria-hidden="true">#</a> 25 NotFound</h1><p>哈希模式下，路径输错了，不会跳到404，how to resolve</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> routes <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">component</span><span class="token operator">:</span> HomeView <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/:path(.*)&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">component</span><span class="token operator">:</span> NotFound <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>  
<span class="token comment">// 路由的匹配顺序：路由从上到下匹配</span>
<span class="token comment">// &#39;/:path(.*)&#39;是调用正则匹配。当上面都没匹配到，说明路径不存在。匹配到.*（任意页面）都会进入notFound</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 正则举例</span>
<span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/news/:id(\\\\d+)&#39;</span> <span class="token comment">// 则/news/123，news/后必须是数字</span>
<span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/news/:id+&#39;</span> <span class="token comment">// 则/news/123/48p，news/后可以有多个参数。</span>
<span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/news/:id*&#39;</span> <span class="token comment">// 则/news/，news/后参数可有可无。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),o=[p];function r(c,l){return s(),a("div",null,o)}const d=n(t,[["render",r],["__file","25NotFound.html.vue"]]);export{d as default};
