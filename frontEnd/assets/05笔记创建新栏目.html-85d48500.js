import{_ as n,p as s,q as a,a1 as t}from"./framework-96b046e1.js";const p={},o=t(`<h1 id="_05-笔记创建新栏目" tabindex="-1"><a class="header-anchor" href="#_05-笔记创建新栏目" aria-hidden="true">#</a> 05 笔记创建新栏目</h1><p>还未进行测试！因为太晚了，要睡了。目测能行</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">/*
// 生成一个新笔记栏目，如22React
// 操作：在note中新建一个新项目文件夹如 22React，然后使用vscode复制路径
*/</span>

<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;fs&quot;</span><span class="token punctuation">)</span>

<span class="token comment">//#region 变量配置</span>
<span class="token comment">// 修改路径为如下 1. /  2. docs开头</span>
<span class="token comment">// let path = &quot;docs/typora/02frontEnd/22React&quot;</span>
<span class="token keyword">let</span> path <span class="token operator">=</span> <span class="token string">&quot;docs/typora/02frontEnd/22React&quot;</span>
<span class="token comment">//#endregion</span>

<span class="token keyword">let</span> dirnameArr <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 创建目录</span>
<span class="token keyword">let</span> dir <span class="token operator">=</span> <span class="token string">&quot;./&quot;</span>
dirnameArr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">val<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        dir<span class="token operator">+=</span>val
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span><span class="token punctuation">{</span>
        dir <span class="token operator">=</span> dir <span class="token operator">+</span> <span class="token string">&quot;/&quot;</span> <span class="token operator">+</span> val
    <span class="token punctuation">}</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;生成目录：&quot;</span> <span class="token operator">+</span> dir<span class="token punctuation">)</span><span class="token punctuation">;</span>
    fs<span class="token punctuation">.</span><span class="token function">mkdirSync</span><span class="token punctuation">(</span>dir<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// 创建README</span>
fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span>dir<span class="token operator">+</span><span class="token string">&quot;/&quot;</span><span class="token operator">+</span><span class="token string">&quot;README.md&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;这是一个新栏目!&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">encoding</span><span class="token operator">:</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;生成README文件&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 创建新文件01test.md</span>
fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span>dir<span class="token operator">+</span><span class="token string">&quot;/&quot;</span><span class="token operator">+</span><span class="token string">&quot;01test.md&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;# 01 test\\r\\n hello!&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">encoding</span><span class="token operator">:</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;生成01test.md文件&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// nav.js</span>
<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
obj<span class="token punctuation">.</span>text <span class="token operator">=</span> dirnameArr<span class="token punctuation">[</span>dirnameArr<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\d*(.+)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
obj<span class="token punctuation">.</span>link <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span>
obj<span class="token punctuation">.</span>link<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
obj<span class="token punctuation">.</span>link <span class="token operator">=</span> obj<span class="token punctuation">.</span>link<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span>
obj<span class="token punctuation">.</span>link <span class="token operator">=</span> <span class="token string">&quot;/&quot;</span> <span class="token operator">+</span> obj<span class="token punctuation">.</span>link <span class="token operator">+</span> <span class="token string">&quot;/&quot;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\\n请在nav.js中写入：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// siderbar.js</span>
<span class="token keyword">let</span> flag <span class="token operator">=</span> <span class="token boolean">false</span>
dir <span class="token operator">=</span> <span class="token string">&quot;&quot;</span>
<span class="token keyword">let</span> siderbarArr <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span>
siderbarArr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>siderbarArr<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
siderbarArr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">val<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        dir <span class="token operator">=</span> dir <span class="token operator">+</span> <span class="token string">&quot;/&quot;</span> <span class="token operator">+</span> val
        fs<span class="token punctuation">.</span><span class="token function">mkdirSync</span><span class="token punctuation">(</span>dir<span class="token punctuation">)</span>
        
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>val <span class="token operator">===</span> <span class="token string">&quot;typora&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        flag <span class="token operator">=</span> <span class="token boolean">true</span>
        fs<span class="token punctuation">.</span><span class="token function">mkdirSync</span><span class="token punctuation">(</span><span class="token string">&quot;./docs/.vuepress&quot;</span><span class="token punctuation">)</span>
        fs<span class="token punctuation">.</span><span class="token function">mkdirSync</span><span class="token punctuation">(</span><span class="token string">&quot;./docs/.vuepress/sidebar&quot;</span><span class="token punctuation">)</span>
        dir <span class="token operator">=</span> <span class="token string">&quot;./docs/.vuepress/sidebar&quot;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// 创建一个siderbar.js</span>
<span class="token keyword">let</span> siderbarChild <span class="token operator">=</span> <span class="token string">&quot;&#39;&quot;</span> <span class="token operator">+</span> obj<span class="token punctuation">.</span>link <span class="token operator">+</span> <span class="token string">&quot;01test.md&quot;</span> <span class="token operator">+</span> <span class="token string">&quot;&#39;,&quot;</span>
<span class="token keyword">let</span> str925 <span class="token operator">=</span> 
<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
export default
    [
        {
            // text: &quot;ECMAScript&quot;,
            collapsible:false,
            children:
            [
                </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>siderbarChild<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">
            ]
        },
        
    ]
</span><span class="token template-punctuation string">\`</span></span>
<span class="token keyword">let</span> siderbarName <span class="token operator">=</span> dirnameArr<span class="token punctuation">[</span>dirnameArr<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">&quot;.js&quot;</span>
fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span>dir <span class="token operator">+</span> <span class="token string">&quot;/&quot;</span> <span class="token operator">+</span> siderbarName<span class="token punctuation">,</span> str925<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">encoding</span><span class="token operator">:</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// siderbar配置内容</span>
<span class="token keyword">let</span> flag2 <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
dir <span class="token operator">=</span> <span class="token string">&quot;&quot;</span>
dirnameArr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">val<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>flag2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        dir <span class="token operator">=</span> dir <span class="token operator">+</span> <span class="token string">&quot;/&quot;</span> <span class="token operator">+</span> val
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>val <span class="token operator">===</span> <span class="token string">&quot;typora&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        flag2 <span class="token operator">=</span> <span class="token boolean">true</span>
        dir <span class="token operator">=</span> <span class="token string">&quot;./sidebar&quot;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\\n请在siderbar.js中写入如下！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">import </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>obj<span class="token punctuation">.</span>text<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> from &#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>dir<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>obj<span class="token punctuation">.</span>link<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>obj<span class="token punctuation">.</span>text<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),e=[o];function c(i,l){return s(),a("div",null,e)}const r=n(p,[["render",c],["__file","05笔记创建新栏目.html.vue"]]);export{r as default};
