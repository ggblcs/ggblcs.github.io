import{_ as n,p as s,q as a,a1 as t}from"./framework-96b046e1.js";const p={},e=t(`<h1 id="_09-小程序返回列表页不刷新" tabindex="-1"><a class="header-anchor" href="#_09-小程序返回列表页不刷新" aria-hidden="true">#</a> 09 小程序返回列表页不刷新</h1><p>列表页 --&gt; 详情页</p><p>从详情页编辑完返回back，列表页不会刷新，是缓存。</p><p>手动刷新（来回传值太混乱了，还得在onshow中写，乱七八糟）</p><p>正文：</p><ol><li>列表点击去详情页</li></ol><p>因为列表是用子组件渲染的 所以用getCurrentPages（）来拿到当前页也就是父页面的方法或变量</p><p>不是用组件渲染的话直接使用this.你的加载列表方法</p><p>（有个小点—因为是用navigateTo 列表页数据会被缓存下来 类似vue的keepAlive，可以看到我的方法叫resetThePage（），在执行前 重置 列表页面数据例如：分页变量,列表数组等）</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 在列表页 点击去详情</span>
<span class="token function">toDetails</span><span class="token punctuation">(</span><span class="token parameter">itemData</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> pages <span class="token operator">=</span> <span class="token function">getCurrentPages</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//获取所有页面栈实例列表</span>
    <span class="token keyword">let</span> nowPage <span class="token operator">=</span> pages<span class="token punctuation">[</span>pages<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//当前页页面实例</span>
    uni<span class="token punctuation">.</span><span class="token function">navigateTo</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/pages/index/newStudentsReport/keyIssue/keyIssueDetails?StudentID=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>itemData<span class="token punctuation">.</span>admissionStudentID<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;preassignedAdministrativeClassID=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>itemData<span class="token punctuation">.</span>preassignedAdministrativeClassID<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;keyGrantStatus=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>getItemTag<span class="token punctuation">.</span>keyGrantStatus<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">events</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token comment">// workListFn 定义事件在通信页面执行</span>
            <span class="token function-variable function">workListFn</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                nowPage<span class="token punctuation">.</span>$vm<span class="token punctuation">.</span><span class="token function">resetThePage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>触发时机</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//  你的提交接口</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>_https<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// 提交成功后 监听到 定义的workListFn并执行 </span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> eventChannel <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getOpenerEventChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token comment">// 监听workListFn事件</span>
        eventChannel<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;workListFn&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 使用navigateBack返回列表</span>
        uni<span class="token punctuation">.</span><span class="token function">navigateBack</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">delta</span><span class="token operator">:</span> <span class="token number">1</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样的话就能做到在提交后就可以刷新数据</p><p>要点： navigateTo（）API中的 events对象 直接去官方看文档介绍（就是页面通讯）https://uniapp.dcloud.io/api/router?id=navigateto</p><p>以上就是处理方式</p><p>最后说下遇到的问题 我最开始就是简单使用 navigateBack 来返回列表（列表并不会刷新），后来改用redirectTo解决了列表不刷新的问题（关闭当前页面，跳转到应用内的某个页面，结果导致列表页路由历史记录在提交返回后一直添加）。</p><p>最后在问了下朋友后在uniapp文档中使用 navigateTo中的events对象来通讯页面控制刷新 解决了该问题 ———————————————— 版权声明：本文为CSDN博主「词不达意难知」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。 原文链接：https://blog.csdn.net/qq_45284938/article/details/117821346</p>`,17),o=[e];function c(i,l){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","09小程序返回列表页不刷新.html.vue"]]);export{r as default};
