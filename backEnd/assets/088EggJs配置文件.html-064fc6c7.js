import{_ as a,M as o,p as d,q as r,R as s,t as e,N as c,a1 as n}from"./framework-96b046e1.js";const i={},p=n(`<h1 id="_088-eggjs配置文件" tabindex="-1"><a class="header-anchor" href="#_088-eggjs配置文件" aria-hidden="true">#</a> 088 EggJs配置文件</h1><h2 id="_1-多环境配置" tabindex="-1"><a class="header-anchor" href="#_1-多环境配置" aria-hidden="true">#</a> 1.多环境配置</h2><p>基础功能--&gt;配置--&gt;多环境配置</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>config
|- config.default.js
|- config.prod.js
|- config.unittest.js
\`- config.local.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>config.default.js</code> 为默认的配置文件，所有环境都会加载这个配置文件，一般也会作为开发环境的默认配置文件。</p>`,5),l={href:"https://www.npmjs.com/package/extend2",target:"_blank",rel:"noopener noreferrer"},u=s("code",null,"prod",-1),_=s("code",null,"config.prod.js",-1),h=s("code",null,"config.default.js",-1),g=s("code",null,"config.prod.js",-1),v=s("code",null,"config.default.js",-1),m=n(`<h2 id="_2-配置环境" tabindex="-1"><a class="header-anchor" href="#_2-配置环境" aria-hidden="true">#</a> 2.配置环境</h2><p>配置环境有两种方式，详见文档，一种是新建一个env文件。</p><p>另一种是<code>EGG_SERVER_ENV=prod</code></p><table><thead><tr><th>NODE_ENV</th><th>EGG_SERVER_ENV</th><th>说明</th></tr></thead><tbody><tr><td></td><td>local</td><td>本地开发环境</td></tr><tr><td>test</td><td>unittest</td><td>单元测试</td></tr><tr><td>production</td><td>prod</td><td>生产环境</td></tr></tbody></table><h2 id="_3-上线部署" tabindex="-1"><a class="header-anchor" href="#_3-上线部署" aria-hidden="true">#</a> 3.上线部署</h2><p>上线是通过<code>egg-scripts</code>来启动的，所以需要安装该插件。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;test&quot;</span><span class="token operator">:</span> <span class="token string">&quot;echo \\&quot;Error: no test specified\\&quot; &amp;&amp; exit 1&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cross-env EGG_SERVER_ENV=dev egg-bin dev&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;prod&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cross-env EGG_SERVER_ENV=prod egg-scripts start --daemon&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;stop&quot;</span><span class="token operator">:</span> <span class="token string">&quot;egg-scripts stop&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7);function f(k,b){const t=o("ExternalLinkIcon");return d(),r("div",null,[p,s("p",null,[e("当指定 env 时会同时加载默认配置和对应的配置(具名配置)文件，具名配置和默认配置将合并(使用"),s("a",l,[e("extend2"),c(t)]),e("深拷贝)成最终配置，具名配置项会覆盖默认配置文件的同名配置。如 "),u,e(" 环境会加载 "),_,e(" 和 "),h,e(" 文件，"),g,e(" 会覆盖 "),v,e(" 的同名配置。")]),m])}const q=a(i,[["render",f],["__file","088EggJs配置文件.html.vue"]]);export{q as default};
