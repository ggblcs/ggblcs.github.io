import{_ as e,p as _,q as p,a1 as t}from"./framework-96b046e1.js";const i={},l=t('<h1 id="_39-面向对象三大特性多态" tabindex="-1"><a class="header-anchor" href="#_39-面向对象三大特性多态" aria-hidden="true">#</a> 39 面向对象三大特性多态</h1><p><em>一非常不重要，二总结的不好，就不必浪费时间了</em></p><ol><li><p>强类型语言：</p><p>一般编译型语言都是强类型语言，强类型语言要求变量的使用要严格符合定义，例如int num，那么num中将来就只能够存储整形数据。</p></li><li><p>弱类型语言</p><p>一般解释型语言都是弱类型语言，弱类型语言不会要求变量的使用要严格符合定义，例如let num，num中既可以存整型数据，也可以存布尔型数据。</p></li><li><p><strong>由于js是弱类型语言，所以我们不用关注多态</strong>。</p></li><li><p>多态是事物的多种状态。例如不同软件下按F1键盘会产生不同结果。</p></li><li><p>多态在编程语言中体现在，父类型变量保存子类型对象，父类型变量当前保存的对象不同，产生的结果也不同。</p></li></ol><p>多态：同一操作作用于不同的对象，可以有不同的解释，产生不同的执行结果【动物叫，狗叫，猫叫】。</p><p>重载：重载是允许多个同名函数，而这些函数的参数不同（或许参数个数不同，或许参数类型不同，或许两者都不同）。</p><p>覆盖：覆盖是子类重新定义父类的虚函数的做法。</p>',6),n=[l];function a(o,r){return _(),p("div",null,n)}const c=e(i,[["render",a],["__file","39面向对象三大特性多态.html.vue"]]);export{c as default};
