import{_ as n,p as s,q as a,a1 as e}from"./framework-96b046e1.js";const t={},p=e(`<h1 id="_21-异常" tabindex="-1"><a class="header-anchor" href="#_21-异常" aria-hidden="true">#</a> 21 异常</h1><h2 id="_1-使用try-except代码块" tabindex="-1"><a class="header-anchor" href="#_1-使用try-except代码块" aria-hidden="true">#</a> 1 使用try-except代码块</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">try</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token operator">/</span><span class="token number">0</span><span class="token punctuation">)</span>
<span class="token keyword">except</span> ZeroDivisionError<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;You can not do it!&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># You can not do it!</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-else-代码块" tabindex="-1"><a class="header-anchor" href="#_2-else-代码块" aria-hidden="true">#</a> 2 else 代码块</h2><p>依赖try代码块成功执行的代码都应放到else代码块中。</p><h2 id="_3-处理-filenotfounderror-异常" tabindex="-1"><a class="header-anchor" href="#_3-处理-filenotfounderror-异常" aria-hidden="true">#</a> 3 处理 FileNotFoundError 异常</h2><p>文件找不到</p><p style="color:red;">4 **split()将字符串分割为列表，不传参按空格分割**</p><h2 id="_4-静默失败-pass" tabindex="-1"><a class="header-anchor" href="#_4-静默失败-pass" aria-hidden="true">#</a> 4 静默失败 pass</h2><p>有时候捕获异常后希望程序保持静默，就像什么都没发生一样继续运行。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># pass</span>
filename <span class="token operator">=</span> <span class="token string">&#39;a.txt&#39;</span>

<span class="token keyword">try</span><span class="token punctuation">:</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
        contents <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">except</span> FileNotFoundError<span class="token punctuation">:</span>
    <span class="token keyword">pass</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),o=[p];function i(c,r){return s(),a("div",null,o)}const d=n(t,[["render",i],["__file","21异常.html.vue"]]);export{d as default};
