import{_ as e,p as d,q as a,a1 as i}from"./framework-96b046e1.js";const n={},s=i(`<h1 id="_02-表的操作" tabindex="-1"><a class="header-anchor" href="#_02-表的操作" aria-hidden="true">#</a> 02 表的操作</h1><h2 id="_01显示表" tabindex="-1"><a class="header-anchor" href="#_01显示表" aria-hidden="true">#</a> 01显示表</h2><p>这个没啥说的，就像显示所有数据库一样，命令简短。</p><p>语法：</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>show tables;
</code></pre><div class="highlight-lines"><div class="highlight-line"> </div></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_02创建表" tabindex="-1"><a class="header-anchor" href="#_02创建表" aria-hidden="true">#</a> 02创建表</h2><p>就像创建数据库一样，有两类语句，简单的和复杂的。如果你曾经创建过名为A的数据库，当你再次创建数据表A时，会报错，但是如果加上 <code>if not exists</code>就不会再报错了，<code>if not exists</code>的意思是：如果不存在。如果你要创建的数据表名恰好是关键字，创建时会报错，加上一个反引号\`\`将数据表名括起来就不会报错了。</p><p>语法：</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>create table [if not exists] \`数据表名\`(
	\`字段名\` 数据类型 [not null | null] [auto_increment] [primary key] [comment] ,
	\`字段名\` 数据类型 [default]
) engine = innodb;
</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line"> </div></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>解释一下：</p><ol><li>第二行的字段名相当于表格中的表头（比如姓名、班级、id之类的词）。</li><li>第二行数据类型涉及内容比较多，下篇文章会讲。</li><li>第二行<code>not null</code>或<code>null</code>指的是是否可以为空，比如申请账号，密码不能为空，但是个性签名可以为空，就是数据是否能空着。</li><li>第二行的[]符号表示可以省略不写。</li><li>第二行<code>auto_increment</code>表示自增（自动增加），比如id，你创建下一条数据时，将id设为自增，则id会随着你创建的数据自动增加。</li><li>第二行<code>primary key</code>表示主键，一个数据表往往会有一个字段名是主键。</li><li><code>comment</code>是备注的意思，表示字段名的备注。</li><li>第三行<code>default</code>表示默认值，可以设置默认值，比如如果设置成绩的默认值为缺考，则填写成绩时，把某名同学的成绩空着不填，系统会自动填写缺考。</li><li>第四行<code>engine</code>表示引擎为<code>innodb</code>（一般初学者选择这个引擎就可以了）。除此之外，引擎还有<code>myisam</code>,<code>memory</code>引擎不同，存储数据的方式不同。</li></ol><p>说了这么多，不如举个例子：创建一个名为<code>student</code>的数据表，分别有id,name,phone,add,几个字段名。</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>-- 简单写
create table student (
	id int ,
	name varchar(20),
	phone varchar(20),
	\`add\` varchar(100)
);
-- 完整写
create table student (
	id int auto_increment primary key comment &#39;主键&#39;,
	name varchar(20) not null comment &#39;姓名&#39;,
	phone varchar(20) comment &#39;电话号码&#39;,
	\`add\` varchar(100) default &#39;地址不详&#39; comment &#39;地址&#39;
) engine = innodb;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="注意点" tabindex="-1"><a class="header-anchor" href="#注意点" aria-hidden="true">#</a> 注意点：</h5><p><strong>如果表中内容有中文，且在语法内容无误情况下在cmd中输入总是报错，此时或许你需要加一句<code>set names gbk</code></strong></p><h5 id="多学一招" tabindex="-1"><a class="header-anchor" href="#多学一招" aria-hidden="true">#</a> 多学一招：</h5><p>如果你想<strong>在当前数据库中为别的数据库创建数据表</strong>，可以<strong>用点来实现</strong>，比如你当前使用的是<code>AAschool</code>数据库，你想为数据库<code>BBschool</code>创建一个数据表<code>student</code>，实现语句是<code>create table BBschool.student;</code></p><h5 id="语法" tabindex="-1"><a class="header-anchor" href="#语法" aria-hidden="true">#</a> 语法：</h5><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>create table 数据库名.数据表名；
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_03显示创建表的语句" tabindex="-1"><a class="header-anchor" href="#_03显示创建表的语句" aria-hidden="true">#</a> 03显示创建表的语句</h2><p>语法：</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>show create table \`数据库名\` [\\G];
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>写<code>\\G</code>与不写的区别是，后者显示结果显示的更清晰一些。</p><h2 id="_04查看表结构" tabindex="-1"><a class="header-anchor" href="#_04查看表结构" aria-hidden="true">#</a> 04查看表结构</h2><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>-- 简单写
desc \`数据表名\`;
-- 复杂写
describe \`数据表名\`;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>desc</code>是<code>describe</code>的缩写，一般缩写更常用。</p><h2 id="_05删除表" tabindex="-1"><a class="header-anchor" href="#_05删除表" aria-hidden="true">#</a> 05删除表</h2><p>语法：</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>drop table [if exists] \`表1\` , \`表2\`;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>方括号表示可省略，内容简单，不再解释！</p><h2 id="_06修改表" tabindex="-1"><a class="header-anchor" href="#_06修改表" aria-hidden="true">#</a> 06修改表</h2><p>要想修改表，首先要有表，详见附录一，修改表的例子基于附录一。</p><h3 id="_1-添加字段" tabindex="-1"><a class="header-anchor" href="#_1-添加字段" aria-hidden="true">#</a> (1)添加字段</h3><p>语法：</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>alter table \`表名\` add [clumn] 字段名 数据类型 [完整性约束条件] [位置];
#位置用[first | after 字段名]插在首列或字段名的后面
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>关键词： <code>add</code>、<code>first</code>、<code>after</code></p><p>比如：我想在<code>name</code>后插入性别<code>sex</code>，使用关键词<code>after</code>。</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>alter table student add sex char(1) comment &#39;性别&#39; after name;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果想在<code>id</code>的前面插入<code>iid</code>，使用<code>first</code>关键词插入首列。</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>alter table student add iid int first;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果既不写关键词<code>first</code>也不写关键词<code>after</code>，默认插在最后。</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>alter table student add last int ;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2-删除字段" tabindex="-1"><a class="header-anchor" href="#_2-删除字段" aria-hidden="true">#</a> (2)删除字段</h3><p>语法：</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>alter table \`表名\` drop [clumn] \`字段名\`;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>比如：删除字段<code>add</code>。</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>alter table \`student\` drop \`add\`;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-修改字段之改名改类型" tabindex="-1"><a class="header-anchor" href="#_3-修改字段之改名改类型" aria-hidden="true">#</a> (3)修改字段之改名改类型</h3><p>语法：</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>alter table \`表名\` change [clumn] 字段名(改前) 字段名(改后) 数据类型;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>关键词：change</p><p>例如：将<code>phone</code>改为<code>cellPhone</code>默认值666666.</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>alter table student change phone cellPhone varchar(20) default &#39;666666&#39; comment &#39;座机&#39;;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>注意：改过之后，你会发现Null属性变了，之前为no，不能为空，现在变为了YES可以为空，是因为改的时候，它自动改为默认的了。如果改的时候你没有写字段的约束性条件，会自动改为默认值。</p><h3 id="_4-修改字段之只改类型" tabindex="-1"><a class="header-anchor" href="#_4-修改字段之只改类型" aria-hidden="true">#</a> (4)修改字段之只改类型</h3><p>语法：</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>alter table \`表名\` modify \`字段名\` [改后的数据类型] [改后的完整性约束性条件];
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>关键词：modify</p><p>例如：改<code>name</code>为<code>int</code>型，默认值为123。</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>alter table student modify name int not null default 123;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_5-修改引擎" tabindex="-1"><a class="header-anchor" href="#_5-修改引擎" aria-hidden="true">#</a> (5)修改引擎</h3><p>语法：</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>alter table \`表名\` engine = 新引擎;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_6-修改表名" tabindex="-1"><a class="header-anchor" href="#_6-修改表名" aria-hidden="true">#</a> (6)修改表名</h3><p>语法：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>alter table \`表名\` rename [to] \`新表名\`;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>过于简单，不再举例。</p><h2 id="附录一" tabindex="-1"><a class="header-anchor" href="#附录一" aria-hidden="true">#</a> 附录一：</h2><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>create database if not exists \`t_e_s_t\` ;  #创建数据库t_e_s_t

use \`t_e_s_t\`; #选择使用数据库t_e_s_t

create table if not exists student ( #创建表student
	id int auto_increment primary key comment &#39;主键&#39;,
	name varchar(20) not null comment &#39;姓名&#39;,
	phone varchar(20) not null comment &#39;电话号码&#39;,
	\`add\` varchar(100) default &#39;地址不详&#39; comment &#39;地址&#39;
) engine = innodb;

desc student;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,69),l=[s];function r(c,t){return d(),a("div",null,l)}const m=e(n,[["render",r],["__file","02表的操作.html.vue"]]);export{m as default};
