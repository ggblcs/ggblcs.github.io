import{_ as n,p as s,q as a,a1 as t}from"./framework-96b046e1.js";const e={},p=t(`<h1 id="_021-redis存储登录状态" tabindex="-1"><a class="header-anchor" href="#_021-redis存储登录状态" aria-hidden="true">#</a> 021 Redis存储登录状态</h1><p>1<strong>获取cookie里的userid，没有就创建，~~用userid作为key保存在容器中分配一个空对象（之前有对象的话就不分配），将这个对象赋值地址给自定义req.session。~~再判断是否有req.session, 没有就使用自定义req.session作为空对象容器，判断redis中是否有userId数据，有就赋值给req.session, 没有就是空对象赋值给req.session</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * 处理cookie和session
 * <span class="token keyword">@param</span> <span class="token parameter">req</span>
 * <span class="token keyword">@param</span> <span class="token parameter">res</span>
 */</span>
<span class="token keyword">const</span> <span class="token function-variable function">initCookieSession</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 1. 处理cookie(目的是获取userid)</span>
    req<span class="token punctuation">.</span>cookie <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>req<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>cookie<span class="token punctuation">)</span><span class="token punctuation">{</span>
        req<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>cookie<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> keyvalue <span class="token operator">=</span> item<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;=&#39;</span><span class="token punctuation">)</span>
            req<span class="token punctuation">.</span>cookie<span class="token punctuation">[</span>keyvalue<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> keyvalue<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 2. 获取用户唯一标识（没有就及进行设置）</span>
    req<span class="token punctuation">.</span>userId <span class="token operator">=</span> req<span class="token punctuation">.</span>cookie<span class="token punctuation">.</span>userId
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>req<span class="token punctuation">.</span>userId<span class="token punctuation">)</span><span class="token punctuation">{</span>
        req<span class="token punctuation">.</span>userId <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">_</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">_it666</span><span class="token template-punctuation string">\`</span></span>
        <span class="token comment">// 给当前用户分配容器</span>
        <span class="token comment">// SESSION_CONTAINER[req.userId] = {}</span>
        req<span class="token punctuation">.</span>session <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
        res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&#39;Set-Cookie&#39;</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">userId=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>req<span class="token punctuation">.</span>userId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;path=/;httpOnly;expires=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">getCookieExpires</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// if (!SESSION_CONTAINER[req.userId]){</span>
    <span class="token comment">//     // 给当前用户分配容器</span>
    <span class="token comment">//     SESSION_CONTAINER[req.userId] = {}</span>
    <span class="token comment">// }</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>req<span class="token punctuation">.</span>session<span class="token punctuation">)</span><span class="token punctuation">{</span>
        req<span class="token punctuation">.</span>session <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">redisGet</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>userId<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// req.session = SESSION_CONTAINER[req.userId]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2<strong>没有req.session为空对象时一定未登录，代码向下执行，再进入到登录路由判断时向redis中写入userid的信息。</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>let result = await loginCheck(req.body)
if (result.code === 200){
    req.session.username = result.data.username
    req.session.password = result.data.password
    req.session.sex = result.data.sex
    // 同步到Redis中
    redisSet(req.userId, req.session)
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>PS：觉得第一步的逻辑有点问题，如果第一次给session赋值空对象，并且已经登录了，那么就再也没有机会赋值有值的对象给session了。</p>`,6),o=[p];function i(c,l){return s(),a("div",null,o)}const r=n(e,[["render",i],["__file","021Redis存储登录状态.html.vue"]]);export{r as default};
