import{_ as n,p as s,q as a,a1 as e}from"./framework-96b046e1.js";const t={},p=e(`<h1 id="_09-eslint介绍" tabindex="-1"><a class="header-anchor" href="#_09-eslint介绍" aria-hidden="true">#</a> 09 ESlint介绍</h1><p>配置文件 <code>.eslintrc</code> <code>.eslintrc.js</code> <code>.eslintrc.json</code> 都可以，也可以在package.json 中</p><p>以<code>.eslint.js</code>为例。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">// 解析选项</span>
    <span class="token literal-property property">parserOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// 具体检查规则</span>
    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// 继承其他规则</span>
    <span class="token keyword">extends</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span class="token comment">// 其他规则看文档 http://eslint.bootcss.com/docs/user-guide/configuring</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">parserOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">ecmaVersion</span><span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token comment">// ES语法版本</span>
    <span class="token literal-property property">sourceType</span><span class="token operator">:</span><span class="token string">&quot;module&quot;</span><span class="token punctuation">,</span> <span class="token comment">// ES 模块化</span>
    <span class="token literal-property property">ecmaFeatures</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">// ES 其他特性</span>
        <span class="token literal-property property">jsx</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">// 如果是react项目，就需要开启jsx语法</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">rules</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment">// off 或 0 关闭规则</span>
<span class="token literal-property property">rules</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment">// warn 或 1 开启规则，使用警告级别错误</span>
<span class="token literal-property property">rules</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment">// error 或 2 开启规则，使用错误级别错误，触发时程序退出</span>

<span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">semi</span><span class="token operator">:</span> <span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span> 
    <span class="token string-property property">&quot;array-callback-return&quot;</span><span class="token operator">:</span> warn<span class="token punctuation">,</span>
    <span class="token string-property property">&quot;default-case&quot;</span><span class="token operator">:</span>  <span class="token comment">// 要求switch语句中必须有default分支</span>
        <span class="token punctuation">[</span>
         <span class="token string">&quot;warn&quot;</span><span class="token punctuation">,</span>
         <span class="token punctuation">{</span> <span class="token literal-property property">commentPattern</span><span class="token operator">:</span> <span class="token string">&quot;^no-default$&quot;</span> <span class="token punctuation">}</span> <span class="token comment">// 允许在分支最后注释 no-default ，就不会有警告了。</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 如果相对一个规则详细配置，可以使用数组，arr[0]表示警告级别，arr[1] 表示配置信息</span>
    <span class="token literal-property property">eqeqeq</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token string">&quot;warn&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;smart&quot;</span> <span class="token punctuation">]</span> <span class="token comment">// 强制使用 === 和 !== 否则警告</span>
    <span class="token comment">// http://selint.bootcss.com/docs/rules/eqeqeq#smart </span>
    <span class="token comment">// eqeqeq smart 除了少数情况下不会有警告</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果觉得规则太多，一条一条写太费力，可以继承现有规则。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">extends</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token string">&quot;react-app&quot;</span> <span class="token punctuation">]</span>
<span class="token comment">// Eslint 官方规则：eslint:recommend</span>
<span class="token comment">// Vue Cli 官方规则：plugin:vue/essential</span>
<span class="token comment">// React Cli 官方规则：react-app</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果想修改一些规则，直接在rules中直接修改重写即可，就覆盖了该条继承的规则。</p>`,9),o=[p];function c(l,r){return s(),a("div",null,o)}const u=n(t,[["render",c],["__file","09ESlint介绍.html.vue"]]);export{u as default};
