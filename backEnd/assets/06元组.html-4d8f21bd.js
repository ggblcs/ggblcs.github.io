import{_ as n,p as s,q as a,a1 as p}from"./framework-96b046e1.js";const t={},e=p(`<h1 id="_06-元组" tabindex="-1"><a class="header-anchor" href="#_06-元组" aria-hidden="true">#</a> 06 元组</h1><blockquote><p>python将不能修改的值视为不可变的，而不可变的列表称之为元组。</p></blockquote><blockquote><p>定义元组使用圆括号</p></blockquote><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token builtin">tuple</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">tuple</span><span class="token punctuation">)</span> <span class="token comment"># (&#39;a&#39;, &#39;b&#39;, &#39;c&#39;)</span>
<span class="token keyword">for</span> value <span class="token keyword">in</span> <span class="token builtin">tuple</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token comment"># a b c</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意点：</p><p>严格的说，元组是由逗号标识的，圆括号只是让元组看起来更整洁，<strong>定义一个只包含一个元素的元组，必须在这个元素后面加上个逗号。</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token builtin">tuple</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">)</span>
tuple1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">tuple</span><span class="token punctuation">)</span> <span class="token comment"># (&#39;a&#39;,)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>tuple1<span class="token punctuation">)</span> <span class="token comment"># a</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_1-修改元组变量" tabindex="-1"><a class="header-anchor" href="#_1-修改元组变量" aria-hidden="true">#</a> 1 修改元组变量</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token string">&#39;a&#39;</span>
b <span class="token operator">=</span> <span class="token string">&#39;b&#39;</span>
<span class="token builtin">list</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">]</span>
<span class="token builtin">tuple</span> <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> <span class="token builtin">list</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">tuple</span><span class="token punctuation">)</span> <span class="token comment"># (&#39;a&#39;, &#39;b&#39;, [&#39;1&#39;, &#39;2&#39;])</span>

a <span class="token operator">=</span> <span class="token string">&#39;c&#39;</span> <span class="token comment"># 即便修改了a的值，也无法间接修改元组元素，堆与栈</span>
<span class="token builtin">list</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;3&#39;</span> <span class="token comment"># 通过修改列表间接修改了元组元素，堆与栈</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">tuple</span><span class="token punctuation">)</span> <span class="token comment"># (&#39;a&#39;, &#39;b&#39;, [&#39;3&#39;, &#39;2&#39;])</span>

<span class="token comment"># tuple[3][0] = &#39;4&#39; # 报错，直接修改元组元素会报错</span>

<span class="token builtin">tuple</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">)</span> <span class="token comment"># 修改元组变量，不会报错，修改成功</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(t,[["render",c],["__file","06元组.html.vue"]]);export{r as default};
