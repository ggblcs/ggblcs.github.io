import{_ as n,p as s,q as a,a1 as t}from"./framework-96b046e1.js";const e={},p=t(`<h1 id="_13-eggjs框架扩展下" tabindex="-1"><a class="header-anchor" href="#_13-eggjs框架扩展下" aria-hidden="true">#</a> 13 EggJs框架扩展下</h1><h2 id="_1-给helper扩展" tabindex="-1"><a class="header-anchor" href="#_1-给helper扩展" aria-hidden="true">#</a> 1.给helper扩展</h2><p>helper是工具类，跟utils一样，有了helper就可以不用创建自己的utils目录了。</p><p>同理创建<code>app/extend/helper.js</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> crypto <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;crypto&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">md5</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token parameter">password</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1.指定加密方式</span>
        <span class="token keyword">const</span> md5 <span class="token operator">=</span> crypto<span class="token punctuation">.</span><span class="token function">createHash</span><span class="token punctuation">(</span><span class="token string">&#39;md5&#39;</span><span class="token punctuation">)</span>
        <span class="token comment">// 2.指定需要加密的内容和加密之后输出的格式</span>
        <span class="token keyword">const</span> hash <span class="token operator">=</span> md5<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span> <span class="token comment">// 指定需要加密的内容</span>
            <span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span><span class="token string">&#39;hex&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 指定加密之后输出的格式</span>
        <span class="token keyword">return</span> hash<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用扩展</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>ctx<span class="token punctuation">.</span>helper<span class="token punctuation">.</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token string">&#39;abc123&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,7),c=[p];function o(i,l){return s(),a("div",null,c)}const r=n(e,[["render",o],["__file","13EggJs框架扩展下.html.vue"]]);export{r as default};
