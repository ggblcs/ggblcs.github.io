import{_ as n,p as a,q as s,a1 as t}from"./framework-96b046e1.js";const e={},p=t(`<h1 id="_01-父子组件传递额外参数" tabindex="-1"><a class="header-anchor" href="#_01-父子组件传递额外参数" aria-hidden="true">#</a> 01 父子组件传递额外参数</h1><h2 id="_1-vue2的解决方法" tabindex="-1"><a class="header-anchor" href="#_1-vue2的解决方法" aria-hidden="true">#</a> 1 vue2的解决方法</h2><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- 1. 需求还原 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Child</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item in list<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@uploadSuccess</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>uploadSuccess<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token comment">&lt;!-- 子组件上传图片成功后，会调用uploadSuccess事件，并会传递 上传成功的reslist 上传成功的filename参数  --&gt;</span>
<span class="token comment">&lt;!-- 但是，我怎样知道，是哪个child调用了这个函数，需要传递额外的参数 item --&gt;</span>

<span class="token comment">&lt;!-- 2. 错误示例 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Child</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item in list<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@uploadSuccess</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>uploadSuccess(item)<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token comment">&lt;!-- 这样只能拿到item，就拿不到子组件传递的参数了 --&gt;</span>

<span class="token comment">&lt;!-- 3.1 实现方案一 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Child</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item in list<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@uploadSuccess</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>uploadSuccess($event, item)<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token comment">&lt;!-- 如果子组件默认只传了一个参数，就用$event 接收 --&gt;</span>

<span class="token comment">&lt;!-- 3.2 实现方案二：只在 vue2 中生效，在 vue3 中不生效 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Child</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item in list<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@uploadSuccess</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>uploadSuccess(arguments, item)<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token comment">&lt;!-- 如果子组件传递了多个参数，就用 arguments数组接收 --&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-vue3的解决方法" tabindex="-1"><a class="header-anchor" href="#_2-vue3的解决方法" aria-hidden="true">#</a> 2 vue3的解决方法</h2><ol><li>默认情况下，如果在父子组件都传递了参数，则只有父组件传递的参数会被接收到（优先级更高）。</li><li>只在父传，能收父；只在子传，能收子；父写<code>@xxx=xx</code>则相当于父没传；父写<code>@xxx=xx()</code>父传了，传的空。</li></ol><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- 1. 实现方案1 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TheWelcome</span> <span class="token attr-name">@updatePerson</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>changePerson(&#39;父组件参数1&#39;,$event , &#39;父组件参数2&#39;)<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token comment">&lt;!-- 如果子组件默认只传了一个参数，就用$event 接收，$event与写的位置无关 --&gt;</span>
<span class="token comment">&lt;!-- 如果子组件传了多个参数，$event只能接收到第一个参数，这种方法不太适用 --&gt;</span>

<span class="token comment">&lt;!-- 2. 实现方案2 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TheWelcome</span> <span class="token attr-name">@updatePerson</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(a, b) =&gt; changePerson(a, b, &#39;父组件参数1&#39;, &#39;父组件参数2&#39;)<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token comment">&lt;!-- 利用一个箭头函数先把子模块返回的参数接收，然后再传递到回调函数中，上面例子a，b接收子组件参数 --&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),l=[p];function c(o,u){return a(),s("div",null,l)}const d=n(e,[["render",c],["__file","01父子组件传递额外参数.html.vue"]]);export{d as default};
